<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="92749"><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="0.0151%" y="661" width="0.0140%" height="15" fill="rgb(227,0,7)" fg:x="14" fg:w="13"/><text x="0.2651%" y="671.50"></text></g><g><title>[[heap]] (114 samples, 0.12%)</title><rect x="0.0054%" y="677" width="0.1229%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="114"/><text x="0.2554%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (80 samples, 0.09%)</title><rect x="0.0420%" y="661" width="0.0863%" height="15" fill="rgb(221,193,54)" fg:x="39" fg:w="80"/><text x="0.2920%" y="671.50"></text></g><g><title>rust_pg::WebServer::new::{{closure}}::{{closure}} (80 samples, 0.09%)</title><rect x="0.0420%" y="645" width="0.0863%" height="15" fill="rgb(248,212,6)" fg:x="39" fg:w="80"/><text x="0.2920%" y="655.50"></text></g><g><title>__GI___clock_gettime (11 samples, 0.01%)</title><rect x="0.1445%" y="661" width="0.0119%" height="15" fill="rgb(208,68,35)" fg:x="134" fg:w="11"/><text x="0.3945%" y="671.50"></text></g><g><title>_int_free (24 samples, 0.03%)</title><rect x="0.1585%" y="661" width="0.0259%" height="15" fill="rgb(232,128,0)" fg:x="147" fg:w="24"/><text x="0.4085%" y="671.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (43 samples, 0.05%)</title><rect x="0.1898%" y="661" width="0.0464%" height="15" fill="rgb(207,160,47)" fg:x="176" fg:w="43"/><text x="0.4398%" y="671.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (10 samples, 0.01%)</title><rect x="0.2361%" y="661" width="0.0108%" height="15" fill="rgb(228,23,34)" fg:x="219" fg:w="10"/><text x="0.4861%" y="671.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (61 samples, 0.07%)</title><rect x="0.2469%" y="661" width="0.0658%" height="15" fill="rgb(218,30,26)" fg:x="229" fg:w="61"/><text x="0.4969%" y="671.50"></text></g><g><title>[anon] (537 samples, 0.58%)</title><rect x="0.1402%" y="677" width="0.5790%" height="15" fill="rgb(220,122,19)" fg:x="130" fg:w="537"/><text x="0.3902%" y="687.50"></text></g><g><title>syscall (372 samples, 0.40%)</title><rect x="0.3181%" y="661" width="0.4011%" height="15" fill="rgb(250,228,42)" fg:x="295" fg:w="372"/><text x="0.5681%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (163 samples, 0.18%)</title><rect x="0.5434%" y="645" width="0.1757%" height="15" fill="rgb(240,193,28)" fg:x="504" fg:w="163"/><text x="0.7934%" y="655.50"></text></g><g><title>__GI___libc_free (47 samples, 0.05%)</title><rect x="0.7483%" y="661" width="0.0507%" height="15" fill="rgb(216,20,37)" fg:x="694" fg:w="47"/><text x="0.9983%" y="671.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="0.7989%" y="661" width="0.0151%" height="15" fill="rgb(206,188,39)" fg:x="741" fg:w="14"/><text x="1.0489%" y="671.50"></text></g><g><title>_int_free (24 samples, 0.03%)</title><rect x="0.8183%" y="661" width="0.0259%" height="15" fill="rgb(217,207,13)" fg:x="759" fg:w="24"/><text x="1.0683%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (35 samples, 0.04%)</title><rect x="0.8518%" y="661" width="0.0377%" height="15" fill="rgb(231,73,38)" fg:x="790" fg:w="35"/><text x="1.1018%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (17 samples, 0.02%)</title><rect x="1.1235%" y="629" width="0.0183%" height="15" fill="rgb(225,20,46)" fg:x="1042" fg:w="17"/><text x="1.3735%" y="639.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (236 samples, 0.25%)</title><rect x="0.8895%" y="661" width="0.2545%" height="15" fill="rgb(210,31,41)" fg:x="825" fg:w="236"/><text x="1.1395%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (27 samples, 0.03%)</title><rect x="1.1148%" y="645" width="0.0291%" height="15" fill="rgb(221,200,47)" fg:x="1034" fg:w="27"/><text x="1.3648%" y="655.50"></text></g><g><title>rust_pg::do_work (127 samples, 0.14%)</title><rect x="1.1450%" y="661" width="0.1369%" height="15" fill="rgb(226,26,5)" fg:x="1062" fg:w="127"/><text x="1.3950%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.02%)</title><rect x="1.2625%" y="645" width="0.0194%" height="15" fill="rgb(249,33,26)" fg:x="1171" fg:w="18"/><text x="1.5125%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.02%)</title><rect x="1.2625%" y="629" width="0.0194%" height="15" fill="rgb(235,183,28)" fg:x="1171" fg:w="18"/><text x="1.5125%" y="639.50"></text></g><g><title>__GI___libc_free (25 samples, 0.03%)</title><rect x="1.3218%" y="645" width="0.0270%" height="15" fill="rgb(221,5,38)" fg:x="1226" fg:w="25"/><text x="1.5718%" y="655.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (74 samples, 0.08%)</title><rect x="1.2820%" y="661" width="0.0798%" height="15" fill="rgb(247,18,42)" fg:x="1189" fg:w="74"/><text x="1.5320%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (12 samples, 0.01%)</title><rect x="1.3488%" y="645" width="0.0129%" height="15" fill="rgb(241,131,45)" fg:x="1251" fg:w="12"/><text x="1.5988%" y="655.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (10 samples, 0.01%)</title><rect x="1.3617%" y="661" width="0.0108%" height="15" fill="rgb(249,31,29)" fg:x="1263" fg:w="10"/><text x="1.6117%" y="671.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::recv (93 samples, 0.10%)</title><rect x="1.3736%" y="661" width="0.1003%" height="15" fill="rgb(225,111,53)" fg:x="1274" fg:w="93"/><text x="1.6236%" y="671.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (32 samples, 0.03%)</title><rect x="1.4739%" y="661" width="0.0345%" height="15" fill="rgb(238,160,17)" fg:x="1367" fg:w="32"/><text x="1.7239%" y="671.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (27 samples, 0.03%)</title><rect x="1.5084%" y="661" width="0.0291%" height="15" fill="rgb(214,148,48)" fg:x="1399" fg:w="27"/><text x="1.7584%" y="671.50"></text></g><g><title>[unknown] (798 samples, 0.86%)</title><rect x="0.7235%" y="677" width="0.8604%" height="15" fill="rgb(232,36,49)" fg:x="671" fg:w="798"/><text x="0.9735%" y="687.50"></text></g><g><title>syscall (31 samples, 0.03%)</title><rect x="1.5504%" y="661" width="0.0334%" height="15" fill="rgb(209,103,24)" fg:x="1438" fg:w="31"/><text x="1.8004%" y="671.50"></text></g><g><title>ret_from_fork (110 samples, 0.12%)</title><rect x="1.5838%" y="661" width="0.1186%" height="15" fill="rgb(229,88,8)" fg:x="1469" fg:w="110"/><text x="1.8338%" y="671.50"></text></g><g><title>schedule_tail (110 samples, 0.12%)</title><rect x="1.5838%" y="645" width="0.1186%" height="15" fill="rgb(213,181,19)" fg:x="1469" fg:w="110"/><text x="1.8338%" y="655.50"></text></g><g><title>finish_task_switch.isra.0 (109 samples, 0.12%)</title><rect x="1.5849%" y="629" width="0.1175%" height="15" fill="rgb(254,191,54)" fg:x="1470" fg:w="109"/><text x="1.8349%" y="639.50"></text></g><g><title>__perf_event_task_sched_in (108 samples, 0.12%)</title><rect x="1.5860%" y="613" width="0.1164%" height="15" fill="rgb(241,83,37)" fg:x="1471" fg:w="108"/><text x="1.8360%" y="623.50"></text></g><g><title>perf_event_context_sched_in (107 samples, 0.12%)</title><rect x="1.5871%" y="597" width="0.1154%" height="15" fill="rgb(233,36,39)" fg:x="1472" fg:w="107"/><text x="1.8371%" y="607.50"></text></g><g><title>x86_pmu_enable (107 samples, 0.12%)</title><rect x="1.5871%" y="581" width="0.1154%" height="15" fill="rgb(226,3,54)" fg:x="1472" fg:w="107"/><text x="1.8371%" y="591.50"></text></g><g><title>intel_pmu_enable_all (106 samples, 0.11%)</title><rect x="1.5882%" y="565" width="0.1143%" height="15" fill="rgb(245,192,40)" fg:x="1473" fg:w="106"/><text x="1.8382%" y="575.50"></text></g><g><title>native_write_msr (104 samples, 0.11%)</title><rect x="1.5903%" y="549" width="0.1121%" height="15" fill="rgb(238,167,29)" fg:x="1475" fg:w="104"/><text x="1.8403%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="7.6033%" y="437" width="0.0108%" height="15" fill="rgb(232,182,51)" fg:x="7052" fg:w="10"/><text x="7.8533%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (10 samples, 0.01%)</title><rect x="7.6033%" y="421" width="0.0108%" height="15" fill="rgb(231,60,39)" fg:x="7052" fg:w="10"/><text x="7.8533%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.01%)</title><rect x="7.6033%" y="405" width="0.0108%" height="15" fill="rgb(208,69,12)" fg:x="7052" fg:w="10"/><text x="7.8533%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.01%)</title><rect x="7.6173%" y="437" width="0.0108%" height="15" fill="rgb(235,93,37)" fg:x="7065" fg:w="10"/><text x="7.8673%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11,496 samples, 12.39%)</title><rect x="12.1964%" y="405" width="12.3947%" height="15" fill="rgb(213,116,39)" fg:x="11312" fg:w="11496"/><text x="12.4464%" y="415.50">core::cmp::impls::&lt;..</text></g><g><title>asm_sysvec_apic_timer_interrupt (16 samples, 0.02%)</title><rect x="43.4377%" y="389" width="0.0173%" height="15" fill="rgb(222,207,29)" fg:x="40288" fg:w="16"/><text x="43.6877%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (16 samples, 0.02%)</title><rect x="43.4377%" y="373" width="0.0173%" height="15" fill="rgb(206,96,30)" fg:x="40288" fg:w="16"/><text x="43.6877%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (33,233 samples, 35.83%)</title><rect x="7.6313%" y="437" width="35.8311%" height="15" fill="rgb(218,138,4)" fg:x="7078" fg:w="33233"/><text x="7.8813%" y="447.50">core::iter::range::&lt;impl core::iter::traits::iterator::Ite..</text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (33,233 samples, 35.83%)</title><rect x="7.6313%" y="421" width="35.8311%" height="15" fill="rgb(250,191,14)" fg:x="7078" fg:w="33233"/><text x="7.8813%" y="431.50">&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range:..</text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (17,503 samples, 18.87%)</title><rect x="24.5911%" y="405" width="18.8714%" height="15" fill="rgb(239,60,40)" fg:x="22808" fg:w="17503"/><text x="24.8411%" y="415.50">core::ops::range::RangeInclus..</text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (557 samples, 0.60%)</title><rect x="43.5024%" y="389" width="0.6005%" height="15" fill="rgb(206,27,48)" fg:x="40348" fg:w="557"/><text x="43.7524%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (557 samples, 0.60%)</title><rect x="43.5024%" y="373" width="0.6005%" height="15" fill="rgb(225,35,8)" fg:x="40348" fg:w="557"/><text x="43.7524%" y="383.50"></text></g><g><title>do_syscall_64 (42 samples, 0.05%)</title><rect x="44.5094%" y="325" width="0.0453%" height="15" fill="rgb(250,213,24)" fg:x="41282" fg:w="42"/><text x="44.7594%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (289 samples, 0.31%)</title><rect x="44.5547%" y="325" width="0.3116%" height="15" fill="rgb(247,123,22)" fg:x="41324" fg:w="289"/><text x="44.8047%" y="335.50"></text></g><g><title>__x64_sys_futex (111 samples, 0.12%)</title><rect x="45.0086%" y="309" width="0.1197%" height="15" fill="rgb(231,138,38)" fg:x="41745" fg:w="111"/><text x="45.2586%" y="319.50"></text></g><g><title>__x86_indirect_thunk_rax (10 samples, 0.01%)</title><rect x="45.1282%" y="309" width="0.0108%" height="15" fill="rgb(231,145,46)" fg:x="41856" fg:w="10"/><text x="45.3782%" y="319.50"></text></g><g><title>_raw_spin_lock (507 samples, 0.55%)</title><rect x="45.5487%" y="261" width="0.5466%" height="15" fill="rgb(251,118,11)" fg:x="42246" fg:w="507"/><text x="45.7987%" y="271.50"></text></g><g><title>__unqueue_futex (17 samples, 0.02%)</title><rect x="47.3126%" y="245" width="0.0183%" height="15" fill="rgb(217,147,25)" fg:x="43882" fg:w="17"/><text x="47.5626%" y="255.50"></text></g><g><title>get_futex_key (120 samples, 0.13%)</title><rect x="47.3331%" y="245" width="0.1294%" height="15" fill="rgb(247,81,37)" fg:x="43901" fg:w="120"/><text x="47.5831%" y="255.50"></text></g><g><title>__unqueue_futex (449 samples, 0.48%)</title><rect x="48.1083%" y="229" width="0.4841%" height="15" fill="rgb(209,12,38)" fg:x="44620" fg:w="449"/><text x="48.3583%" y="239.50"></text></g><g><title>mark_wake_futex (1,138 samples, 1.23%)</title><rect x="47.4625%" y="245" width="1.2270%" height="15" fill="rgb(227,1,9)" fg:x="44021" fg:w="1138"/><text x="47.7125%" y="255.50"></text></g><g><title>plist_del (89 samples, 0.10%)</title><rect x="48.5935%" y="229" width="0.0960%" height="15" fill="rgb(248,47,43)" fg:x="45070" fg:w="89"/><text x="48.8435%" y="239.50"></text></g><g><title>wake_q_add_safe (157 samples, 0.17%)</title><rect x="48.6949%" y="245" width="0.1693%" height="15" fill="rgb(221,10,30)" fg:x="45164" fg:w="157"/><text x="48.9449%" y="255.50"></text></g><g><title>__lock_text_start (53 samples, 0.06%)</title><rect x="49.1941%" y="229" width="0.0571%" height="15" fill="rgb(210,229,1)" fg:x="45627" fg:w="53"/><text x="49.4441%" y="239.50"></text></g><g><title>__x86_indirect_thunk_rax (13 samples, 0.01%)</title><rect x="49.2512%" y="229" width="0.0140%" height="15" fill="rgb(222,148,37)" fg:x="45680" fg:w="13"/><text x="49.5012%" y="239.50"></text></g><g><title>_raw_spin_lock (210 samples, 0.23%)</title><rect x="49.2652%" y="229" width="0.2264%" height="15" fill="rgb(234,67,33)" fg:x="45693" fg:w="210"/><text x="49.5152%" y="239.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.02%)</title><rect x="49.4916%" y="229" width="0.0151%" height="15" fill="rgb(247,98,35)" fg:x="45903" fg:w="14"/><text x="49.7416%" y="239.50"></text></g><g><title>select_task_rq_fair (14 samples, 0.02%)</title><rect x="49.5067%" y="229" width="0.0151%" height="15" fill="rgb(247,138,52)" fg:x="45917" fg:w="14"/><text x="49.7567%" y="239.50"></text></g><g><title>__lock_text_start (138 samples, 0.15%)</title><rect x="50.1914%" y="213" width="0.1488%" height="15" fill="rgb(213,79,30)" fg:x="46552" fg:w="138"/><text x="50.4414%" y="223.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (13 samples, 0.01%)</title><rect x="50.3261%" y="197" width="0.0140%" height="15" fill="rgb(246,177,23)" fg:x="46677" fg:w="13"/><text x="50.5761%" y="207.50"></text></g><g><title>sysvec_apic_timer_interrupt (13 samples, 0.01%)</title><rect x="50.3261%" y="181" width="0.0140%" height="15" fill="rgb(230,62,27)" fg:x="46677" fg:w="13"/><text x="50.5761%" y="191.50"></text></g><g><title>_raw_spin_lock (465 samples, 0.50%)</title><rect x="50.3412%" y="213" width="0.5014%" height="15" fill="rgb(216,154,8)" fg:x="46691" fg:w="465"/><text x="50.5912%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (463 samples, 0.50%)</title><rect x="50.3434%" y="197" width="0.4992%" height="15" fill="rgb(244,35,45)" fg:x="46693" fg:w="463"/><text x="50.5934%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (463 samples, 0.50%)</title><rect x="50.3434%" y="181" width="0.4992%" height="15" fill="rgb(251,115,12)" fg:x="46693" fg:w="463"/><text x="50.5934%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (519 samples, 0.56%)</title><rect x="50.8426%" y="213" width="0.5596%" height="15" fill="rgb(240,54,50)" fg:x="47156" fg:w="519"/><text x="51.0926%" y="223.50"></text></g><g><title>enqueue_task (11 samples, 0.01%)</title><rect x="51.4032%" y="213" width="0.0119%" height="15" fill="rgb(233,84,52)" fg:x="47676" fg:w="11"/><text x="51.6532%" y="223.50"></text></g><g><title>select_idle_sibling (21 samples, 0.02%)</title><rect x="51.4453%" y="213" width="0.0226%" height="15" fill="rgb(207,117,47)" fg:x="47715" fg:w="21"/><text x="51.6953%" y="223.50"></text></g><g><title>available_idle_cpu (611 samples, 0.66%)</title><rect x="51.8237%" y="197" width="0.6588%" height="15" fill="rgb(249,43,39)" fg:x="48066" fg:w="611"/><text x="52.0737%" y="207.50"></text></g><g><title>cpus_share_cache (14 samples, 0.02%)</title><rect x="52.4825%" y="197" width="0.0151%" height="15" fill="rgb(209,38,44)" fg:x="48677" fg:w="14"/><text x="52.7325%" y="207.50"></text></g><g><title>__bitmap_and (52 samples, 0.06%)</title><rect x="52.6065%" y="181" width="0.0561%" height="15" fill="rgb(236,212,23)" fg:x="48792" fg:w="52"/><text x="52.8565%" y="191.50"></text></g><g><title>__bitmap_andnot (12 samples, 0.01%)</title><rect x="52.6626%" y="181" width="0.0129%" height="15" fill="rgb(242,79,21)" fg:x="48844" fg:w="12"/><text x="52.9126%" y="191.50"></text></g><g><title>available_idle_cpu (265 samples, 0.29%)</title><rect x="52.6755%" y="181" width="0.2857%" height="15" fill="rgb(211,96,35)" fg:x="48856" fg:w="265"/><text x="52.9255%" y="191.50"></text></g><g><title>_find_next_bit.constprop.0 (51 samples, 0.05%)</title><rect x="53.0733%" y="149" width="0.0550%" height="15" fill="rgb(253,215,40)" fg:x="49225" fg:w="51"/><text x="53.3233%" y="159.50"></text></g><g><title>cpumask_next (61 samples, 0.07%)</title><rect x="53.0669%" y="165" width="0.0658%" height="15" fill="rgb(211,81,21)" fg:x="49219" fg:w="61"/><text x="53.3169%" y="175.50"></text></g><g><title>_find_next_bit.constprop.0 (19 samples, 0.02%)</title><rect x="53.1564%" y="149" width="0.0205%" height="15" fill="rgb(208,190,38)" fg:x="49302" fg:w="19"/><text x="53.4064%" y="159.50"></text></g><g><title>cpumask_next_wrap (43 samples, 0.05%)</title><rect x="53.1326%" y="165" width="0.0464%" height="15" fill="rgb(235,213,38)" fg:x="49280" fg:w="43"/><text x="53.3826%" y="175.50"></text></g><g><title>select_idle_core (206 samples, 0.22%)</title><rect x="52.9763%" y="181" width="0.2221%" height="15" fill="rgb(237,122,38)" fg:x="49135" fg:w="206"/><text x="53.2263%" y="191.50"></text></g><g><title>find_next_bit (18 samples, 0.02%)</title><rect x="53.1790%" y="165" width="0.0194%" height="15" fill="rgb(244,218,35)" fg:x="49323" fg:w="18"/><text x="53.4290%" y="175.50"></text></g><g><title>cpumask_next_wrap (19 samples, 0.02%)</title><rect x="53.2415%" y="165" width="0.0205%" height="15" fill="rgb(240,68,47)" fg:x="49381" fg:w="19"/><text x="53.4915%" y="175.50"></text></g><g><title>native_sched_clock (12 samples, 0.01%)</title><rect x="53.2696%" y="149" width="0.0129%" height="15" fill="rgb(210,16,53)" fg:x="49407" fg:w="12"/><text x="53.5196%" y="159.50"></text></g><g><title>select_idle_cpu (80 samples, 0.09%)</title><rect x="53.1984%" y="181" width="0.0863%" height="15" fill="rgb(235,124,12)" fg:x="49341" fg:w="80"/><text x="53.4484%" y="191.50"></text></g><g><title>sched_clock_cpu (16 samples, 0.02%)</title><rect x="53.2674%" y="165" width="0.0173%" height="15" fill="rgb(224,169,11)" fg:x="49405" fg:w="16"/><text x="53.5174%" y="175.50"></text></g><g><title>select_idle_sibling (733 samples, 0.79%)</title><rect x="52.5138%" y="197" width="0.7903%" height="15" fill="rgb(250,166,2)" fg:x="48706" fg:w="733"/><text x="52.7638%" y="207.50"></text></g><g><title>select_idle_smt (18 samples, 0.02%)</title><rect x="53.2847%" y="181" width="0.0194%" height="15" fill="rgb(242,216,29)" fg:x="49421" fg:w="18"/><text x="53.5347%" y="191.50"></text></g><g><title>update_cfs_rq_h_load (71 samples, 0.08%)</title><rect x="53.3968%" y="181" width="0.0766%" height="15" fill="rgb(230,116,27)" fg:x="49525" fg:w="71"/><text x="53.6468%" y="191.50"></text></g><g><title>wake_affine (220 samples, 0.24%)</title><rect x="53.3052%" y="197" width="0.2372%" height="15" fill="rgb(228,99,48)" fg:x="49440" fg:w="220"/><text x="53.5552%" y="207.50"></text></g><g><title>wake_affine_weight (64 samples, 0.07%)</title><rect x="53.4734%" y="181" width="0.0690%" height="15" fill="rgb(253,11,6)" fg:x="49596" fg:w="64"/><text x="53.7234%" y="191.50"></text></g><g><title>select_task_rq_fair (1,928 samples, 2.08%)</title><rect x="51.4679%" y="213" width="2.0787%" height="15" fill="rgb(247,143,39)" fg:x="47736" fg:w="1928"/><text x="51.7179%" y="223.50">s..</text></g><g><title>__lock_text_start (22 samples, 0.02%)</title><rect x="53.7019%" y="165" width="0.0237%" height="15" fill="rgb(236,97,10)" fg:x="49808" fg:w="22"/><text x="53.9519%" y="175.50"></text></g><g><title>migrate_task_rq_fair (136 samples, 0.15%)</title><rect x="53.6459%" y="197" width="0.1466%" height="15" fill="rgb(233,208,19)" fg:x="49756" fg:w="136"/><text x="53.8959%" y="207.50"></text></g><g><title>remove_entity_load_avg (98 samples, 0.11%)</title><rect x="53.6868%" y="181" width="0.1057%" height="15" fill="rgb(216,164,2)" fg:x="49794" fg:w="98"/><text x="53.9368%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (62 samples, 0.07%)</title><rect x="53.7256%" y="165" width="0.0668%" height="15" fill="rgb(220,129,5)" fg:x="49830" fg:w="62"/><text x="53.9756%" y="175.50"></text></g><g><title>set_task_cpu (231 samples, 0.25%)</title><rect x="53.5467%" y="213" width="0.2491%" height="15" fill="rgb(242,17,10)" fg:x="49664" fg:w="231"/><text x="53.7967%" y="223.50"></text></g><g><title>check_preempt_curr (18 samples, 0.02%)</title><rect x="53.9111%" y="197" width="0.0194%" height="15" fill="rgb(242,107,0)" fg:x="50002" fg:w="18"/><text x="54.1611%" y="207.50"></text></g><g><title>enqueue_entity (49 samples, 0.05%)</title><rect x="54.0383%" y="181" width="0.0528%" height="15" fill="rgb(251,28,31)" fg:x="50120" fg:w="49"/><text x="54.2883%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (223 samples, 0.24%)</title><rect x="56.2799%" y="149" width="0.2404%" height="15" fill="rgb(233,223,10)" fg:x="52199" fg:w="223"/><text x="56.5299%" y="159.50"></text></g><g><title>__update_load_avg_se (99 samples, 0.11%)</title><rect x="56.5203%" y="149" width="0.1067%" height="15" fill="rgb(215,21,27)" fg:x="52422" fg:w="99"/><text x="56.7703%" y="159.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="56.6270%" y="149" width="0.0140%" height="15" fill="rgb(232,23,21)" fg:x="52521" fg:w="13"/><text x="56.8770%" y="159.50"></text></g><g><title>reweight_entity (10 samples, 0.01%)</title><rect x="56.6454%" y="149" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="52538" fg:w="10"/><text x="56.8954%" y="159.50"></text></g><g><title>update_cfs_group (288 samples, 0.31%)</title><rect x="56.6561%" y="149" width="0.3105%" height="15" fill="rgb(226,81,46)" fg:x="52548" fg:w="288"/><text x="56.9061%" y="159.50"></text></g><g><title>reweight_entity (182 samples, 0.20%)</title><rect x="56.7704%" y="133" width="0.1962%" height="15" fill="rgb(247,70,30)" fg:x="52654" fg:w="182"/><text x="57.0204%" y="143.50"></text></g><g><title>update_curr (130 samples, 0.14%)</title><rect x="56.9667%" y="149" width="0.1402%" height="15" fill="rgb(212,68,19)" fg:x="52836" fg:w="130"/><text x="57.2167%" y="159.50"></text></g><g><title>__update_load_avg_cfs_rq (144 samples, 0.16%)</title><rect x="57.6729%" y="133" width="0.1553%" height="15" fill="rgb(240,187,13)" fg:x="53491" fg:w="144"/><text x="57.9229%" y="143.50"></text></g><g><title>__update_load_avg_se (223 samples, 0.24%)</title><rect x="57.8281%" y="133" width="0.2404%" height="15" fill="rgb(223,113,26)" fg:x="53635" fg:w="223"/><text x="58.0781%" y="143.50"></text></g><g><title>update_load_avg (932 samples, 1.00%)</title><rect x="57.1068%" y="149" width="1.0049%" height="15" fill="rgb(206,192,2)" fg:x="52966" fg:w="932"/><text x="57.3568%" y="159.50"></text></g><g><title>attach_entity_load_avg (40 samples, 0.04%)</title><rect x="58.0686%" y="133" width="0.0431%" height="15" fill="rgb(241,108,4)" fg:x="53858" fg:w="40"/><text x="58.3186%" y="143.50"></text></g><g><title>enqueue_entity (2,978 samples, 3.21%)</title><rect x="54.9019%" y="165" width="3.2108%" height="15" fill="rgb(247,173,49)" fg:x="50921" fg:w="2978"/><text x="55.1519%" y="175.50">enq..</text></g><g><title>rb_insert_color (70 samples, 0.08%)</title><rect x="58.1128%" y="165" width="0.0755%" height="15" fill="rgb(224,114,35)" fg:x="53899" fg:w="70"/><text x="58.3628%" y="175.50"></text></g><g><title>update_curr (10 samples, 0.01%)</title><rect x="58.2443%" y="133" width="0.0108%" height="15" fill="rgb(245,159,27)" fg:x="54021" fg:w="10"/><text x="58.4943%" y="143.50"></text></g><g><title>update_cfs_group (65 samples, 0.07%)</title><rect x="58.1882%" y="165" width="0.0701%" height="15" fill="rgb(245,172,44)" fg:x="53969" fg:w="65"/><text x="58.4382%" y="175.50"></text></g><g><title>reweight_entity (19 samples, 0.02%)</title><rect x="58.2378%" y="149" width="0.0205%" height="15" fill="rgb(236,23,11)" fg:x="54015" fg:w="19"/><text x="58.4878%" y="159.50"></text></g><g><title>update_curr (14 samples, 0.02%)</title><rect x="58.2583%" y="165" width="0.0151%" height="15" fill="rgb(205,117,38)" fg:x="54034" fg:w="14"/><text x="58.5083%" y="175.50"></text></g><g><title>enqueue_task_fair (3,928 samples, 4.24%)</title><rect x="54.0911%" y="181" width="4.2351%" height="15" fill="rgb(237,72,25)" fg:x="50169" fg:w="3928"/><text x="54.3411%" y="191.50">enque..</text></g><g><title>update_load_avg (49 samples, 0.05%)</title><rect x="58.2734%" y="165" width="0.0528%" height="15" fill="rgb(244,70,9)" fg:x="54048" fg:w="49"/><text x="58.5234%" y="175.50"></text></g><g><title>psi_flags_change (16 samples, 0.02%)</title><rect x="58.3316%" y="181" width="0.0173%" height="15" fill="rgb(217,125,39)" fg:x="54102" fg:w="16"/><text x="58.5816%" y="191.50"></text></g><g><title>psi_group_change (32 samples, 0.03%)</title><rect x="58.3489%" y="181" width="0.0345%" height="15" fill="rgb(235,36,10)" fg:x="54118" fg:w="32"/><text x="58.5989%" y="191.50"></text></g><g><title>psi_flags_change (87 samples, 0.09%)</title><rect x="59.3106%" y="165" width="0.0938%" height="15" fill="rgb(251,123,47)" fg:x="55010" fg:w="87"/><text x="59.5606%" y="175.50"></text></g><g><title>sched_clock (32 samples, 0.03%)</title><rect x="62.8708%" y="133" width="0.0345%" height="15" fill="rgb(221,13,13)" fg:x="58312" fg:w="32"/><text x="63.1208%" y="143.50"></text></g><g><title>native_sched_clock (531 samples, 0.57%)</title><rect x="63.0325%" y="117" width="0.5725%" height="15" fill="rgb(238,131,9)" fg:x="58462" fg:w="531"/><text x="63.2825%" y="127.50"></text></g><g><title>record_times (1,037 samples, 1.12%)</title><rect x="62.5214%" y="149" width="1.1181%" height="15" fill="rgb(211,50,8)" fg:x="57988" fg:w="1037"/><text x="62.7714%" y="159.50"></text></g><g><title>sched_clock_cpu (681 samples, 0.73%)</title><rect x="62.9053%" y="133" width="0.7342%" height="15" fill="rgb(245,182,24)" fg:x="58344" fg:w="681"/><text x="63.1553%" y="143.50"></text></g><g><title>sched_clock (32 samples, 0.03%)</title><rect x="63.6050%" y="117" width="0.0345%" height="15" fill="rgb(242,14,37)" fg:x="58993" fg:w="32"/><text x="63.8550%" y="127.50"></text></g><g><title>psi_group_change (3,970 samples, 4.28%)</title><rect x="59.4044%" y="165" width="4.2804%" height="15" fill="rgb(246,228,12)" fg:x="55097" fg:w="3970"/><text x="59.6544%" y="175.50">psi_g..</text></g><g><title>sched_clock_cpu (42 samples, 0.05%)</title><rect x="63.6395%" y="149" width="0.0453%" height="15" fill="rgb(213,55,15)" fg:x="59025" fg:w="42"/><text x="63.8895%" y="159.50"></text></g><g><title>psi_task_change (5,018 samples, 5.41%)</title><rect x="58.3834%" y="181" width="5.4103%" height="15" fill="rgb(209,9,3)" fg:x="54150" fg:w="5018"/><text x="58.6334%" y="191.50">psi_tas..</text></g><g><title>record_times (101 samples, 0.11%)</title><rect x="63.6848%" y="165" width="0.1089%" height="15" fill="rgb(230,59,30)" fg:x="59067" fg:w="101"/><text x="63.9348%" y="175.50"></text></g><g><title>enqueue_task (9,149 samples, 9.86%)</title><rect x="53.9305%" y="197" width="9.8643%" height="15" fill="rgb(209,121,21)" fg:x="50020" fg:w="9149"/><text x="54.1805%" y="207.50">enqueue_task</text></g><g><title>enqueue_task_fair (23 samples, 0.02%)</title><rect x="63.7948%" y="197" width="0.0248%" height="15" fill="rgb(220,109,13)" fg:x="59169" fg:w="23"/><text x="64.0448%" y="207.50"></text></g><g><title>psi_task_change (14 samples, 0.02%)</title><rect x="63.8196%" y="197" width="0.0151%" height="15" fill="rgb(232,18,1)" fg:x="59192" fg:w="14"/><text x="64.0696%" y="207.50"></text></g><g><title>check_preempt_wakeup (12 samples, 0.01%)</title><rect x="64.2045%" y="165" width="0.0129%" height="15" fill="rgb(215,41,42)" fg:x="59549" fg:w="12"/><text x="64.4545%" y="175.50"></text></g><g><title>check_preempt_curr (1,353 samples, 1.46%)</title><rect x="64.0805%" y="181" width="1.4588%" height="15" fill="rgb(224,123,36)" fg:x="59434" fg:w="1353"/><text x="64.3305%" y="191.50"></text></g><g><title>resched_curr (1,226 samples, 1.32%)</title><rect x="64.2174%" y="165" width="1.3218%" height="15" fill="rgb(240,125,3)" fg:x="59561" fg:w="1226"/><text x="64.4674%" y="175.50"></text></g><g><title>ttwu_do_activate (10,990 samples, 11.85%)</title><rect x="53.8000%" y="213" width="11.8492%" height="15" fill="rgb(205,98,50)" fg:x="49899" fg:w="10990"/><text x="54.0500%" y="223.50">ttwu_do_activate</text></g><g><title>ttwu_do_wakeup (1,683 samples, 1.81%)</title><rect x="63.8347%" y="197" width="1.8146%" height="15" fill="rgb(205,185,37)" fg:x="59206" fg:w="1683"/><text x="64.0847%" y="207.50">t..</text></g><g><title>resched_curr (102 samples, 0.11%)</title><rect x="65.5393%" y="181" width="0.1100%" height="15" fill="rgb(238,207,15)" fg:x="60787" fg:w="102"/><text x="65.7893%" y="191.50"></text></g><g><title>ttwu_queue_wakelist (241 samples, 0.26%)</title><rect x="65.6568%" y="213" width="0.2598%" height="15" fill="rgb(213,199,42)" fg:x="60896" fg:w="241"/><text x="65.9068%" y="223.50"></text></g><g><title>native_sched_clock (164 samples, 0.18%)</title><rect x="66.5031%" y="181" width="0.1768%" height="15" fill="rgb(235,201,11)" fg:x="61681" fg:w="164"/><text x="66.7531%" y="191.50"></text></g><g><title>update_rq_clock (711 samples, 0.77%)</title><rect x="65.9166%" y="213" width="0.7666%" height="15" fill="rgb(207,46,11)" fg:x="61137" fg:w="711"/><text x="66.1666%" y="223.50"></text></g><g><title>sched_clock_cpu (189 samples, 0.20%)</title><rect x="66.4794%" y="197" width="0.2038%" height="15" fill="rgb(241,35,35)" fg:x="61659" fg:w="189"/><text x="66.7294%" y="207.50"></text></g><g><title>try_to_wake_up (15,927 samples, 17.17%)</title><rect x="49.5251%" y="229" width="17.1722%" height="15" fill="rgb(243,32,47)" fg:x="45934" fg:w="15927"/><text x="49.7751%" y="239.50">try_to_wake_up</text></g><g><title>wake_affine (13 samples, 0.01%)</title><rect x="66.6832%" y="213" width="0.0140%" height="15" fill="rgb(247,202,23)" fg:x="61848" fg:w="13"/><text x="66.9332%" y="223.50"></text></g><g><title>ttwu_do_activate (17 samples, 0.02%)</title><rect x="66.6972%" y="229" width="0.0183%" height="15" fill="rgb(219,102,11)" fg:x="61861" fg:w="17"/><text x="66.9472%" y="239.50"></text></g><g><title>ttwu_queue_wakelist (10 samples, 0.01%)</title><rect x="66.7155%" y="229" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="61878" fg:w="10"/><text x="66.9655%" y="239.50"></text></g><g><title>ttwu_stat (19 samples, 0.02%)</title><rect x="66.7263%" y="229" width="0.0205%" height="15" fill="rgb(222,74,54)" fg:x="61888" fg:w="19"/><text x="66.9763%" y="239.50"></text></g><g><title>futex_wake (19,172 samples, 20.67%)</title><rect x="46.0965%" y="261" width="20.6708%" height="15" fill="rgb(216,99,12)" fg:x="42754" fg:w="19172"/><text x="46.3465%" y="271.50">futex_wake</text></g><g><title>wake_up_q (16,605 samples, 17.90%)</title><rect x="48.8641%" y="245" width="17.9032%" height="15" fill="rgb(226,22,26)" fg:x="45321" fg:w="16605"/><text x="49.1141%" y="255.50">wake_up_q</text></g><g><title>update_rq_clock (19 samples, 0.02%)</title><rect x="66.7468%" y="229" width="0.0205%" height="15" fill="rgb(217,163,10)" fg:x="61907" fg:w="19"/><text x="66.9968%" y="239.50"></text></g><g><title>get_futex_key (43 samples, 0.05%)</title><rect x="66.7673%" y="261" width="0.0464%" height="15" fill="rgb(213,25,53)" fg:x="61926" fg:w="43"/><text x="67.0173%" y="271.50"></text></g><g><title>hash_futex (234 samples, 0.25%)</title><rect x="66.8137%" y="261" width="0.2523%" height="15" fill="rgb(252,105,26)" fg:x="61969" fg:w="234"/><text x="67.0637%" y="271.50"></text></g><g><title>mark_wake_futex (13 samples, 0.01%)</title><rect x="67.0660%" y="261" width="0.0140%" height="15" fill="rgb(220,39,43)" fg:x="62203" fg:w="13"/><text x="67.3160%" y="271.50"></text></g><g><title>do_futex (20,084 samples, 21.65%)</title><rect x="45.4355%" y="277" width="21.6541%" height="15" fill="rgb(229,68,48)" fg:x="42141" fg:w="20084"/><text x="45.6855%" y="287.50">do_futex</text></g><g><title>__x64_sys_futex (20,274 samples, 21.86%)</title><rect x="45.2533%" y="293" width="21.8590%" height="15" fill="rgb(252,8,32)" fg:x="41972" fg:w="20274"/><text x="45.5033%" y="303.50">__x64_sys_futex</text></g><g><title>futex_wake (21 samples, 0.02%)</title><rect x="67.0897%" y="277" width="0.0226%" height="15" fill="rgb(223,20,43)" fg:x="62225" fg:w="21"/><text x="67.3397%" y="287.50"></text></g><g><title>do_futex (37 samples, 0.04%)</title><rect x="67.1123%" y="293" width="0.0399%" height="15" fill="rgb(229,81,49)" fg:x="62246" fg:w="37"/><text x="67.3623%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (26 samples, 0.03%)</title><rect x="67.1522%" y="293" width="0.0280%" height="15" fill="rgb(236,28,36)" fg:x="62283" fg:w="26"/><text x="67.4022%" y="303.50"></text></g><g><title>syscall_enter_from_user_mode (52 samples, 0.06%)</title><rect x="67.1802%" y="293" width="0.0561%" height="15" fill="rgb(249,185,26)" fg:x="62309" fg:w="52"/><text x="67.4302%" y="303.50"></text></g><g><title>fpregs_assert_state_consistent (25 samples, 0.03%)</title><rect x="67.3549%" y="261" width="0.0270%" height="15" fill="rgb(249,174,33)" fg:x="62471" fg:w="25"/><text x="67.6049%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (85 samples, 0.09%)</title><rect x="67.2913%" y="277" width="0.0916%" height="15" fill="rgb(233,201,37)" fg:x="62412" fg:w="85"/><text x="67.5413%" y="287.50"></text></g><g><title>do_syscall_64 (20,650 samples, 22.26%)</title><rect x="45.1390%" y="309" width="22.2644%" height="15" fill="rgb(221,78,26)" fg:x="41866" fg:w="20650"/><text x="45.3890%" y="319.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (155 samples, 0.17%)</title><rect x="67.2363%" y="293" width="0.1671%" height="15" fill="rgb(250,127,30)" fg:x="62361" fg:w="155"/><text x="67.4863%" y="303.50"></text></g><g><title>fpregs_assert_state_consistent (19 samples, 0.02%)</title><rect x="67.3829%" y="277" width="0.0205%" height="15" fill="rgb(230,49,44)" fg:x="62497" fg:w="19"/><text x="67.6329%" y="287.50"></text></g><g><title>syscall_enter_from_user_mode (18 samples, 0.02%)</title><rect x="67.4034%" y="309" width="0.0194%" height="15" fill="rgb(229,67,23)" fg:x="62516" fg:w="18"/><text x="67.6534%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20,940 samples, 22.58%)</title><rect x="44.8663%" y="325" width="22.5771%" height="15" fill="rgb(249,83,47)" fg:x="41613" fg:w="20940"/><text x="45.1163%" y="335.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.02%)</title><rect x="67.4228%" y="309" width="0.0205%" height="15" fill="rgb(215,43,3)" fg:x="62534" fg:w="19"/><text x="67.6728%" y="319.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (21,705 samples, 23.40%)</title><rect x="44.1622%" y="357" width="23.4019%" height="15" fill="rgb(238,154,13)" fg:x="40960" fg:w="21705"/><text x="44.4122%" y="367.50">&lt;parking_lot_core::thread_parker::imp..</text></g><g><title>syscall (21,696 samples, 23.39%)</title><rect x="44.1719%" y="341" width="23.3922%" height="15" fill="rgb(219,56,2)" fg:x="40969" fg:w="21696"/><text x="44.4219%" y="351.50">syscall</text></g><g><title>syscall_return_via_sysret (112 samples, 0.12%)</title><rect x="67.4433%" y="325" width="0.1208%" height="15" fill="rgb(233,0,4)" fg:x="62553" fg:w="112"/><text x="67.6933%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="67.5802%" y="357" width="0.0140%" height="15" fill="rgb(235,30,7)" fg:x="62680" fg:w="13"/><text x="67.8302%" y="367.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow::{{closure}} (13 samples, 0.01%)</title><rect x="67.5802%" y="341" width="0.0140%" height="15" fill="rgb(250,79,13)" fg:x="62680" fg:w="13"/><text x="67.8302%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (573 samples, 0.62%)</title><rect x="67.5943%" y="357" width="0.6178%" height="15" fill="rgb(211,146,34)" fg:x="62693" fg:w="573"/><text x="67.8443%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (573 samples, 0.62%)</title><rect x="67.5943%" y="341" width="0.6178%" height="15" fill="rgb(228,22,38)" fg:x="62693" fg:w="573"/><text x="67.8443%" y="351.50"></text></g><g><title>core::cmp::PartialOrd::gt (32 samples, 0.03%)</title><rect x="68.2228%" y="341" width="0.0345%" height="15" fill="rgb(235,168,5)" fg:x="63276" fg:w="32"/><text x="68.4728%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (32 samples, 0.03%)</title><rect x="68.2228%" y="325" width="0.0345%" height="15" fill="rgb(221,155,16)" fg:x="63276" fg:w="32"/><text x="68.4728%" y="335.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (32 samples, 0.03%)</title><rect x="68.2228%" y="309" width="0.0345%" height="15" fill="rgb(215,215,53)" fg:x="63276" fg:w="32"/><text x="68.4728%" y="319.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (32 samples, 0.03%)</title><rect x="68.2228%" y="293" width="0.0345%" height="15" fill="rgb(223,4,10)" fg:x="63276" fg:w="32"/><text x="68.4728%" y="303.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (32 samples, 0.03%)</title><rect x="68.2228%" y="277" width="0.0345%" height="15" fill="rgb(234,103,6)" fg:x="63276" fg:w="32"/><text x="68.4728%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (29 samples, 0.03%)</title><rect x="68.2261%" y="261" width="0.0313%" height="15" fill="rgb(227,97,0)" fg:x="63279" fg:w="29"/><text x="68.4761%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (18 samples, 0.02%)</title><rect x="68.2379%" y="245" width="0.0194%" height="15" fill="rgb(234,150,53)" fg:x="63290" fg:w="18"/><text x="68.4879%" y="255.50"></text></g><g><title>[[vdso]] (266 samples, 0.29%)</title><rect x="68.2886%" y="277" width="0.2868%" height="15" fill="rgb(228,201,54)" fg:x="63337" fg:w="266"/><text x="68.5386%" y="287.50"></text></g><g><title>[[vdso]] (187 samples, 0.20%)</title><rect x="68.3738%" y="261" width="0.2016%" height="15" fill="rgb(222,22,37)" fg:x="63416" fg:w="187"/><text x="68.6238%" y="271.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (345 samples, 0.37%)</title><rect x="68.2121%" y="357" width="0.3720%" height="15" fill="rgb(237,53,32)" fg:x="63266" fg:w="345"/><text x="68.4621%" y="367.50"></text></g><g><title>std::time::Instant::now (303 samples, 0.33%)</title><rect x="68.2573%" y="341" width="0.3267%" height="15" fill="rgb(233,25,53)" fg:x="63308" fg:w="303"/><text x="68.5073%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (303 samples, 0.33%)</title><rect x="68.2573%" y="325" width="0.3267%" height="15" fill="rgb(210,40,34)" fg:x="63308" fg:w="303"/><text x="68.5073%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::now (303 samples, 0.33%)</title><rect x="68.2573%" y="309" width="0.3267%" height="15" fill="rgb(241,220,44)" fg:x="63308" fg:w="303"/><text x="68.5073%" y="319.50"></text></g><g><title>__GI___clock_gettime (293 samples, 0.32%)</title><rect x="68.2681%" y="293" width="0.3159%" height="15" fill="rgb(235,28,35)" fg:x="63318" fg:w="293"/><text x="68.5181%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::hash (14 samples, 0.02%)</title><rect x="68.6379%" y="341" width="0.0151%" height="15" fill="rgb(210,56,17)" fg:x="63661" fg:w="14"/><text x="68.8879%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (259 samples, 0.28%)</title><rect x="68.6595%" y="325" width="0.2792%" height="15" fill="rgb(224,130,29)" fg:x="63681" fg:w="259"/><text x="68.9095%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (259 samples, 0.28%)</title><rect x="68.6595%" y="309" width="0.2792%" height="15" fill="rgb(235,212,8)" fg:x="63681" fg:w="259"/><text x="68.9095%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="68.9495%" y="309" width="0.0129%" height="15" fill="rgb(223,33,50)" fg:x="63950" fg:w="12"/><text x="69.1995%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="68.9495%" y="293" width="0.0129%" height="15" fill="rgb(219,149,13)" fg:x="63950" fg:w="12"/><text x="69.1995%" y="303.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (20 samples, 0.02%)</title><rect x="68.9625%" y="293" width="0.0216%" height="15" fill="rgb(250,156,29)" fg:x="63962" fg:w="20"/><text x="69.2125%" y="303.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (19 samples, 0.02%)</title><rect x="68.9635%" y="277" width="0.0205%" height="15" fill="rgb(216,193,19)" fg:x="63963" fg:w="19"/><text x="69.2135%" y="287.50"></text></g><g><title>core::hint::spin_loop (19 samples, 0.02%)</title><rect x="68.9635%" y="261" width="0.0205%" height="15" fill="rgb(216,135,14)" fg:x="63963" fg:w="19"/><text x="69.2135%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (19 samples, 0.02%)</title><rect x="68.9635%" y="245" width="0.0205%" height="15" fill="rgb(241,47,5)" fg:x="63963" fg:w="19"/><text x="69.2135%" y="255.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (372 samples, 0.40%)</title><rect x="68.5840%" y="357" width="0.4011%" height="15" fill="rgb(233,42,35)" fg:x="63611" fg:w="372"/><text x="68.8340%" y="367.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (308 samples, 0.33%)</title><rect x="68.6530%" y="341" width="0.3321%" height="15" fill="rgb(231,13,6)" fg:x="63675" fg:w="308"/><text x="68.9030%" y="351.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (43 samples, 0.05%)</title><rect x="68.9387%" y="325" width="0.0464%" height="15" fill="rgb(207,181,40)" fg:x="63940" fg:w="43"/><text x="69.1887%" y="335.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (21 samples, 0.02%)</title><rect x="68.9625%" y="309" width="0.0226%" height="15" fill="rgb(254,173,49)" fg:x="63962" fg:w="21"/><text x="69.2125%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (463 samples, 0.50%)</title><rect x="68.9927%" y="341" width="0.4992%" height="15" fill="rgb(221,1,38)" fg:x="63990" fg:w="463"/><text x="69.2427%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (463 samples, 0.50%)</title><rect x="68.9927%" y="325" width="0.4992%" height="15" fill="rgb(206,124,46)" fg:x="63990" fg:w="463"/><text x="69.2427%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (24,144 samples, 26.03%)</title><rect x="43.4625%" y="437" width="26.0315%" height="15" fill="rgb(249,21,11)" fg:x="40311" fg:w="24144"/><text x="43.7125%" y="447.50">core::ptr::drop_in_place&lt;lock_api::mutex::..</text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24,144 samples, 26.03%)</title><rect x="43.4625%" y="421" width="26.0315%" height="15" fill="rgb(222,201,40)" fg:x="40311" fg:w="24144"/><text x="43.7125%" y="431.50">&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core:..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (24,144 samples, 26.03%)</title><rect x="43.4625%" y="405" width="26.0315%" height="15" fill="rgb(235,61,29)" fg:x="40311" fg:w="24144"/><text x="43.7125%" y="415.50">&lt;parking_lot::raw_mutex::RawMutex as lock_..</text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (23,550 samples, 25.39%)</title><rect x="44.1029%" y="389" width="25.3911%" height="15" fill="rgb(219,207,3)" fg:x="40905" fg:w="23550"/><text x="44.3529%" y="399.50">parking_lot::raw_mutex::RawMutex::unlock_..</text></g><g><title>parking_lot_core::parking_lot::unpark_one (23,538 samples, 25.38%)</title><rect x="44.1158%" y="373" width="25.3782%" height="15" fill="rgb(222,56,46)" fg:x="40917" fg:w="23538"/><text x="44.3658%" y="383.50">parking_lot_core::parking_lot::unpark_one</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (472 samples, 0.51%)</title><rect x="68.9851%" y="357" width="0.5089%" height="15" fill="rgb(239,76,54)" fg:x="63983" fg:w="472"/><text x="69.2351%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (372 samples, 0.40%)</title><rect x="69.5242%" y="405" width="0.4011%" height="15" fill="rgb(231,124,27)" fg:x="64483" fg:w="372"/><text x="69.7742%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (372 samples, 0.40%)</title><rect x="69.5242%" y="389" width="0.4011%" height="15" fill="rgb(249,195,6)" fg:x="64483" fg:w="372"/><text x="69.7742%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (313 samples, 0.34%)</title><rect x="70.2563%" y="389" width="0.3375%" height="15" fill="rgb(237,174,47)" fg:x="65162" fg:w="313"/><text x="70.5063%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (313 samples, 0.34%)</title><rect x="70.2563%" y="373" width="0.3375%" height="15" fill="rgb(206,201,31)" fg:x="65162" fg:w="313"/><text x="70.5063%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (92 samples, 0.10%)</title><rect x="70.5938%" y="389" width="0.0992%" height="15" fill="rgb(231,57,52)" fg:x="65475" fg:w="92"/><text x="70.8438%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (92 samples, 0.10%)</title><rect x="70.5938%" y="373" width="0.0992%" height="15" fill="rgb(248,177,22)" fg:x="65475" fg:w="92"/><text x="70.8438%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (593 samples, 0.64%)</title><rect x="70.8622%" y="325" width="0.6394%" height="15" fill="rgb(215,211,37)" fg:x="65724" fg:w="593"/><text x="71.1122%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (593 samples, 0.64%)</title><rect x="70.8622%" y="309" width="0.6394%" height="15" fill="rgb(241,128,51)" fg:x="65724" fg:w="593"/><text x="71.1122%" y="319.50"></text></g><g><title>__switch_to_asm (19 samples, 0.02%)</title><rect x="72.2585%" y="293" width="0.0205%" height="15" fill="rgb(227,165,31)" fg:x="67019" fg:w="19"/><text x="72.5085%" y="303.50"></text></g><g><title>do_syscall_64 (27 samples, 0.03%)</title><rect x="72.2930%" y="293" width="0.0291%" height="15" fill="rgb(228,167,24)" fg:x="67051" fg:w="27"/><text x="72.5430%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (298 samples, 0.32%)</title><rect x="72.3221%" y="293" width="0.3213%" height="15" fill="rgb(228,143,12)" fg:x="67078" fg:w="298"/><text x="72.5721%" y="303.50"></text></g><g><title>__x64_sys_futex (70 samples, 0.08%)</title><rect x="73.1242%" y="277" width="0.0755%" height="15" fill="rgb(249,149,8)" fg:x="67822" fg:w="70"/><text x="73.3742%" y="287.50"></text></g><g><title>__get_user_nocheck_4 (283 samples, 0.31%)</title><rect x="74.4321%" y="213" width="0.3051%" height="15" fill="rgb(243,35,44)" fg:x="69035" fg:w="283"/><text x="74.6821%" y="223.50"></text></g><g><title>_cond_resched (15 samples, 0.02%)</title><rect x="74.7372%" y="213" width="0.0162%" height="15" fill="rgb(246,89,9)" fg:x="69318" fg:w="15"/><text x="74.9872%" y="223.50"></text></g><g><title>_raw_spin_lock (124 samples, 0.13%)</title><rect x="74.7534%" y="213" width="0.1337%" height="15" fill="rgb(233,213,13)" fg:x="69333" fg:w="124"/><text x="75.0034%" y="223.50"></text></g><g><title>rcu_all_qs (24 samples, 0.03%)</title><rect x="75.4466%" y="197" width="0.0259%" height="15" fill="rgb(233,141,41)" fg:x="69976" fg:w="24"/><text x="75.6966%" y="207.50"></text></g><g><title>___perf_sw_event (91 samples, 0.10%)</title><rect x="76.5938%" y="165" width="0.0981%" height="15" fill="rgb(239,167,4)" fg:x="71040" fg:w="91"/><text x="76.8438%" y="175.50"></text></g><g><title>__update_idle_core (17 samples, 0.02%)</title><rect x="76.7081%" y="165" width="0.0183%" height="15" fill="rgb(209,217,16)" fg:x="71146" fg:w="17"/><text x="76.9581%" y="175.50"></text></g><g><title>__x86_indirect_thunk_rax (11 samples, 0.01%)</title><rect x="76.7264%" y="165" width="0.0119%" height="15" fill="rgb(219,88,35)" fg:x="71163" fg:w="11"/><text x="76.9764%" y="175.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.02%)</title><rect x="76.7383%" y="165" width="0.0173%" height="15" fill="rgb(220,193,23)" fg:x="71174" fg:w="16"/><text x="76.9883%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (16 samples, 0.02%)</title><rect x="76.7383%" y="149" width="0.0173%" height="15" fill="rgb(230,90,52)" fg:x="71174" fg:w="16"/><text x="76.9883%" y="159.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (16 samples, 0.02%)</title><rect x="76.7383%" y="133" width="0.0173%" height="15" fill="rgb(252,106,19)" fg:x="71174" fg:w="16"/><text x="76.9883%" y="143.50"></text></g><g><title>dequeue_entity (21 samples, 0.02%)</title><rect x="76.9906%" y="149" width="0.0226%" height="15" fill="rgb(206,74,20)" fg:x="71408" fg:w="21"/><text x="77.2406%" y="159.50"></text></g><g><title>clear_buddies (46 samples, 0.05%)</title><rect x="77.4790%" y="133" width="0.0496%" height="15" fill="rgb(230,138,44)" fg:x="71861" fg:w="46"/><text x="77.7290%" y="143.50"></text></g><g><title>__calc_delta (27 samples, 0.03%)</title><rect x="77.9448%" y="117" width="0.0291%" height="15" fill="rgb(235,182,43)" fg:x="72293" fg:w="27"/><text x="78.1948%" y="127.50"></text></g><g><title>__update_load_avg_cfs_rq (74 samples, 0.08%)</title><rect x="77.9771%" y="117" width="0.0798%" height="15" fill="rgb(242,16,51)" fg:x="72323" fg:w="74"/><text x="78.2271%" y="127.50"></text></g><g><title>__update_load_avg_se (136 samples, 0.15%)</title><rect x="78.0569%" y="117" width="0.1466%" height="15" fill="rgb(248,9,4)" fg:x="72397" fg:w="136"/><text x="78.3069%" y="127.50"></text></g><g><title>_raw_spin_lock (69 samples, 0.07%)</title><rect x="78.2035%" y="117" width="0.0744%" height="15" fill="rgb(210,31,22)" fg:x="72533" fg:w="69"/><text x="78.4535%" y="127.50"></text></g><g><title>clear_buddies (16 samples, 0.02%)</title><rect x="78.2779%" y="117" width="0.0173%" height="15" fill="rgb(239,54,39)" fg:x="72602" fg:w="16"/><text x="78.5279%" y="127.50"></text></g><g><title>rcu_read_unlock_strict (10 samples, 0.01%)</title><rect x="78.3027%" y="117" width="0.0108%" height="15" fill="rgb(230,99,41)" fg:x="72625" fg:w="10"/><text x="78.5527%" y="127.50"></text></g><g><title>reweight_entity (12 samples, 0.01%)</title><rect x="78.3135%" y="117" width="0.0129%" height="15" fill="rgb(253,106,12)" fg:x="72635" fg:w="12"/><text x="78.5635%" y="127.50"></text></g><g><title>update_cfs_group (324 samples, 0.35%)</title><rect x="78.3265%" y="117" width="0.3493%" height="15" fill="rgb(213,46,41)" fg:x="72647" fg:w="324"/><text x="78.5765%" y="127.50"></text></g><g><title>reweight_entity (163 samples, 0.18%)</title><rect x="78.5000%" y="101" width="0.1757%" height="15" fill="rgb(215,133,35)" fg:x="72808" fg:w="163"/><text x="78.7500%" y="111.50"></text></g><g><title>__calc_delta (129 samples, 0.14%)</title><rect x="79.2289%" y="101" width="0.1391%" height="15" fill="rgb(213,28,5)" fg:x="73484" fg:w="129"/><text x="79.4789%" y="111.50"></text></g><g><title>__cgroup_account_cputime (54 samples, 0.06%)</title><rect x="79.3680%" y="101" width="0.0582%" height="15" fill="rgb(215,77,49)" fg:x="73613" fg:w="54"/><text x="79.6180%" y="111.50"></text></g><g><title>cgroup_rstat_updated (33 samples, 0.04%)</title><rect x="79.3906%" y="85" width="0.0356%" height="15" fill="rgb(248,100,22)" fg:x="73634" fg:w="33"/><text x="79.6406%" y="95.50"></text></g><g><title>cgroup_rstat_updated (12 samples, 0.01%)</title><rect x="79.4262%" y="101" width="0.0129%" height="15" fill="rgb(208,67,9)" fg:x="73667" fg:w="12"/><text x="79.6762%" y="111.50"></text></g><g><title>cpuacct_charge (302 samples, 0.33%)</title><rect x="79.4391%" y="101" width="0.3256%" height="15" fill="rgb(219,133,21)" fg:x="73679" fg:w="302"/><text x="79.6891%" y="111.50"></text></g><g><title>rcu_read_unlock_strict (16 samples, 0.02%)</title><rect x="79.7647%" y="101" width="0.0173%" height="15" fill="rgb(246,46,29)" fg:x="73981" fg:w="16"/><text x="80.0147%" y="111.50"></text></g><g><title>update_curr (1,153 samples, 1.24%)</title><rect x="78.6758%" y="117" width="1.2431%" height="15" fill="rgb(246,185,52)" fg:x="72971" fg:w="1153"/><text x="78.9258%" y="127.50"></text></g><g><title>update_min_vruntime (127 samples, 0.14%)</title><rect x="79.7820%" y="101" width="0.1369%" height="15" fill="rgb(252,136,11)" fg:x="73997" fg:w="127"/><text x="80.0320%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (217 samples, 0.23%)</title><rect x="80.3815%" y="101" width="0.2340%" height="15" fill="rgb(219,138,53)" fg:x="74553" fg:w="217"/><text x="80.6315%" y="111.50"></text></g><g><title>update_load_avg (824 samples, 0.89%)</title><rect x="79.9189%" y="117" width="0.8884%" height="15" fill="rgb(211,51,23)" fg:x="74124" fg:w="824"/><text x="80.1689%" y="127.50"></text></g><g><title>__update_load_avg_se (178 samples, 0.19%)</title><rect x="80.6154%" y="101" width="0.1919%" height="15" fill="rgb(247,221,28)" fg:x="74770" fg:w="178"/><text x="80.8654%" y="111.50"></text></g><g><title>dequeue_entity (3,099 samples, 3.34%)</title><rect x="77.5286%" y="133" width="3.3413%" height="15" fill="rgb(251,222,45)" fg:x="71907" fg:w="3099"/><text x="77.7786%" y="143.50">deq..</text></g><g><title>update_min_vruntime (58 samples, 0.06%)</title><rect x="80.8073%" y="117" width="0.0625%" height="15" fill="rgb(217,162,53)" fg:x="74948" fg:w="58"/><text x="81.0573%" y="127.50"></text></g><g><title>reweight_entity (10 samples, 0.01%)</title><rect x="80.9497%" y="117" width="0.0108%" height="15" fill="rgb(229,93,14)" fg:x="75080" fg:w="10"/><text x="81.1997%" y="127.50"></text></g><g><title>update_cfs_group (84 samples, 0.09%)</title><rect x="80.8710%" y="133" width="0.0906%" height="15" fill="rgb(209,67,49)" fg:x="75007" fg:w="84"/><text x="81.1210%" y="143.50"></text></g><g><title>update_curr (20 samples, 0.02%)</title><rect x="80.9615%" y="133" width="0.0216%" height="15" fill="rgb(213,87,29)" fg:x="75091" fg:w="20"/><text x="81.2115%" y="143.50"></text></g><g><title>update_load_avg (46 samples, 0.05%)</title><rect x="80.9831%" y="133" width="0.0496%" height="15" fill="rgb(205,151,52)" fg:x="75111" fg:w="46"/><text x="81.2331%" y="143.50"></text></g><g><title>dequeue_task_fair (3,756 samples, 4.05%)</title><rect x="77.0132%" y="149" width="4.0496%" height="15" fill="rgb(253,215,39)" fg:x="71429" fg:w="3756"/><text x="77.2632%" y="159.50">dequ..</text></g><g><title>update_min_vruntime (28 samples, 0.03%)</title><rect x="81.0327%" y="133" width="0.0302%" height="15" fill="rgb(221,220,41)" fg:x="75157" fg:w="28"/><text x="81.2827%" y="143.50"></text></g><g><title>psi_flags_change (26 samples, 0.03%)</title><rect x="81.0683%" y="149" width="0.0280%" height="15" fill="rgb(218,133,21)" fg:x="75190" fg:w="26"/><text x="81.3183%" y="159.50"></text></g><g><title>psi_group_change (37 samples, 0.04%)</title><rect x="81.0963%" y="149" width="0.0399%" height="15" fill="rgb(221,193,43)" fg:x="75216" fg:w="37"/><text x="81.3463%" y="159.50"></text></g><g><title>psi_flags_change (26 samples, 0.03%)</title><rect x="81.7410%" y="133" width="0.0280%" height="15" fill="rgb(240,128,52)" fg:x="75814" fg:w="26"/><text x="81.9910%" y="143.50"></text></g><g><title>sched_clock (29 samples, 0.03%)</title><rect x="84.2705%" y="101" width="0.0313%" height="15" fill="rgb(253,114,12)" fg:x="78160" fg:w="29"/><text x="84.5205%" y="111.50"></text></g><g><title>native_sched_clock (758 samples, 0.82%)</title><rect x="84.4171%" y="85" width="0.8173%" height="15" fill="rgb(215,223,47)" fg:x="78296" fg:w="758"/><text x="84.6671%" y="95.50"></text></g><g><title>record_times (1,202 samples, 1.30%)</title><rect x="83.9729%" y="117" width="1.2960%" height="15" fill="rgb(248,225,23)" fg:x="77884" fg:w="1202"/><text x="84.2229%" y="127.50"></text></g><g><title>sched_clock_cpu (897 samples, 0.97%)</title><rect x="84.3017%" y="101" width="0.9671%" height="15" fill="rgb(250,108,0)" fg:x="78189" fg:w="897"/><text x="84.5517%" y="111.50"></text></g><g><title>sched_clock (32 samples, 0.03%)</title><rect x="85.2343%" y="85" width="0.0345%" height="15" fill="rgb(228,208,7)" fg:x="79054" fg:w="32"/><text x="85.4843%" y="95.50"></text></g><g><title>psi_group_change (3,275 samples, 3.53%)</title><rect x="81.7691%" y="133" width="3.5310%" height="15" fill="rgb(244,45,10)" fg:x="75840" fg:w="3275"/><text x="82.0191%" y="143.50">psi..</text></g><g><title>sched_clock_cpu (29 samples, 0.03%)</title><rect x="85.2688%" y="117" width="0.0313%" height="15" fill="rgb(207,125,25)" fg:x="79086" fg:w="29"/><text x="85.5188%" y="127.50"></text></g><g><title>psi_task_change (3,944 samples, 4.25%)</title><rect x="81.1362%" y="149" width="4.2523%" height="15" fill="rgb(210,195,18)" fg:x="75253" fg:w="3944"/><text x="81.3862%" y="159.50">psi_t..</text></g><g><title>record_times (82 samples, 0.09%)</title><rect x="85.3001%" y="133" width="0.0884%" height="15" fill="rgb(249,80,12)" fg:x="79115" fg:w="82"/><text x="85.5501%" y="143.50"></text></g><g><title>dequeue_task (8,004 samples, 8.63%)</title><rect x="76.7642%" y="165" width="8.6297%" height="15" fill="rgb(221,65,9)" fg:x="71198" fg:w="8004"/><text x="77.0142%" y="175.50">dequeue_task</text></g><g><title>dequeue_task_fair (61 samples, 0.07%)</title><rect x="85.3939%" y="165" width="0.0658%" height="15" fill="rgb(235,49,36)" fg:x="79202" fg:w="61"/><text x="85.6439%" y="175.50"></text></g><g><title>do_perf_sw_event.constprop.0 (19 samples, 0.02%)</title><rect x="86.7050%" y="133" width="0.0205%" height="15" fill="rgb(225,32,20)" fg:x="80418" fg:w="19"/><text x="86.9550%" y="143.50"></text></g><g><title>___perf_sw_event (25 samples, 0.03%)</title><rect x="86.6996%" y="149" width="0.0270%" height="15" fill="rgb(215,141,46)" fg:x="80413" fg:w="25"/><text x="86.9496%" y="159.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (13 samples, 0.01%)</title><rect x="86.8786%" y="101" width="0.0140%" height="15" fill="rgb(250,160,47)" fg:x="80579" fg:w="13"/><text x="87.1286%" y="111.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (72 samples, 0.08%)</title><rect x="86.9066%" y="85" width="0.0776%" height="15" fill="rgb(216,222,40)" fg:x="80605" fg:w="72"/><text x="87.1566%" y="95.50"></text></g><g><title>perf_event_context_sched_in (1,698 samples, 1.83%)</title><rect x="86.7945%" y="133" width="1.8307%" height="15" fill="rgb(234,217,39)" fg:x="80501" fg:w="1698"/><text x="87.0445%" y="143.50">p..</text></g><g><title>x86_pmu_enable (1,647 samples, 1.78%)</title><rect x="86.8495%" y="117" width="1.7758%" height="15" fill="rgb(207,178,40)" fg:x="80552" fg:w="1647"/><text x="87.0995%" y="127.50">x..</text></g><g><title>intel_pmu_enable_all (1,607 samples, 1.73%)</title><rect x="86.8926%" y="101" width="1.7326%" height="15" fill="rgb(221,136,13)" fg:x="80592" fg:w="1607"/><text x="87.1426%" y="111.50"></text></g><g><title>native_write_msr (1,522 samples, 1.64%)</title><rect x="86.9842%" y="85" width="1.6410%" height="15" fill="rgb(249,199,10)" fg:x="80677" fg:w="1522"/><text x="87.2342%" y="95.50"></text></g><g><title>__perf_event_task_sched_in (1,764 samples, 1.90%)</title><rect x="86.7265%" y="149" width="1.9019%" height="15" fill="rgb(249,222,13)" fg:x="80438" fg:w="1764"/><text x="86.9765%" y="159.50">_..</text></g><g><title>asm_common_interrupt (10 samples, 0.01%)</title><rect x="88.6284%" y="149" width="0.0108%" height="15" fill="rgb(244,185,38)" fg:x="82202" fg:w="10"/><text x="88.8784%" y="159.50"></text></g><g><title>common_interrupt (10 samples, 0.01%)</title><rect x="88.6284%" y="133" width="0.0108%" height="15" fill="rgb(236,202,9)" fg:x="82202" fg:w="10"/><text x="88.8784%" y="143.50"></text></g><g><title>asm_call_sysvec_on_stack (10 samples, 0.01%)</title><rect x="88.6284%" y="117" width="0.0108%" height="15" fill="rgb(250,229,37)" fg:x="82202" fg:w="10"/><text x="88.8784%" y="127.50"></text></g><g><title>handle_edge_irq (10 samples, 0.01%)</title><rect x="88.6284%" y="101" width="0.0108%" height="15" fill="rgb(206,174,23)" fg:x="82202" fg:w="10"/><text x="88.8784%" y="111.50"></text></g><g><title>asm_call_sysvec_on_stack (14 samples, 0.02%)</title><rect x="88.6392%" y="117" width="0.0151%" height="15" fill="rgb(211,33,43)" fg:x="82212" fg:w="14"/><text x="88.8892%" y="127.50"></text></g><g><title>__sysvec_apic_timer_interrupt (14 samples, 0.02%)</title><rect x="88.6392%" y="101" width="0.0151%" height="15" fill="rgb(245,58,50)" fg:x="82212" fg:w="14"/><text x="88.8892%" y="111.50"></text></g><g><title>hrtimer_interrupt (13 samples, 0.01%)</title><rect x="88.6403%" y="85" width="0.0140%" height="15" fill="rgb(244,68,36)" fg:x="82213" fg:w="13"/><text x="88.8903%" y="95.50"></text></g><g><title>__hrtimer_run_queues (13 samples, 0.01%)</title><rect x="88.6403%" y="69" width="0.0140%" height="15" fill="rgb(232,229,15)" fg:x="82213" fg:w="13"/><text x="88.8903%" y="79.50"></text></g><g><title>__run_hrtimer (13 samples, 0.01%)</title><rect x="88.6403%" y="53" width="0.0140%" height="15" fill="rgb(254,30,23)" fg:x="82213" fg:w="13"/><text x="88.8903%" y="63.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="88.6392%" y="149" width="0.0216%" height="15" fill="rgb(235,160,14)" fg:x="82212" fg:w="20"/><text x="88.8892%" y="159.50"></text></g><g><title>sysvec_apic_timer_interrupt (20 samples, 0.02%)</title><rect x="88.6392%" y="133" width="0.0216%" height="15" fill="rgb(212,155,44)" fg:x="82212" fg:w="20"/><text x="88.8892%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (2,972 samples, 3.20%)</title><rect x="85.4618%" y="165" width="3.2043%" height="15" fill="rgb(226,2,50)" fg:x="79265" fg:w="2972"/><text x="85.7118%" y="175.50">fin..</text></g><g><title>newidle_balance (22 samples, 0.02%)</title><rect x="88.6662%" y="165" width="0.0237%" height="15" fill="rgb(234,177,6)" fg:x="82237" fg:w="22"/><text x="88.9162%" y="175.50"></text></g><g><title>__msecs_to_jiffies (15 samples, 0.02%)</title><rect x="88.7826%" y="149" width="0.0162%" height="15" fill="rgb(217,24,9)" fg:x="82345" fg:w="15"/><text x="89.0326%" y="159.50"></text></g><g><title>__msecs_to_jiffies (16 samples, 0.02%)</title><rect x="89.3206%" y="133" width="0.0173%" height="15" fill="rgb(220,13,46)" fg:x="82844" fg:w="16"/><text x="89.5706%" y="143.50"></text></g><g><title>nohz_newidle_balance (27 samples, 0.03%)</title><rect x="89.3390%" y="133" width="0.0291%" height="15" fill="rgb(239,221,27)" fg:x="82861" fg:w="27"/><text x="89.5890%" y="143.50"></text></g><g><title>newidle_balance (528 samples, 0.57%)</title><rect x="88.8020%" y="149" width="0.5693%" height="15" fill="rgb(222,198,25)" fg:x="82363" fg:w="528"/><text x="89.0520%" y="159.50"></text></g><g><title>nohz_newidle_balance (15 samples, 0.02%)</title><rect x="89.3713%" y="149" width="0.0162%" height="15" fill="rgb(211,99,13)" fg:x="82891" fg:w="15"/><text x="89.6213%" y="159.50"></text></g><g><title>rcu_read_unlock_strict (12 samples, 0.01%)</title><rect x="89.4015%" y="149" width="0.0129%" height="15" fill="rgb(232,111,31)" fg:x="82919" fg:w="12"/><text x="89.6515%" y="159.50"></text></g><g><title>set_next_entity (14 samples, 0.02%)</title><rect x="89.4144%" y="149" width="0.0151%" height="15" fill="rgb(245,82,37)" fg:x="82931" fg:w="14"/><text x="89.6644%" y="159.50"></text></g><g><title>pick_next_task_fair (687 samples, 0.74%)</title><rect x="88.6931%" y="165" width="0.7407%" height="15" fill="rgb(227,149,46)" fg:x="82262" fg:w="687"/><text x="88.9431%" y="175.50"></text></g><g><title>cpumask_next (16 samples, 0.02%)</title><rect x="89.7196%" y="133" width="0.0173%" height="15" fill="rgb(218,36,50)" fg:x="83214" fg:w="16"/><text x="89.9696%" y="143.50"></text></g><g><title>_find_next_bit.constprop.0 (16 samples, 0.02%)</title><rect x="89.7196%" y="117" width="0.0173%" height="15" fill="rgb(226,80,48)" fg:x="83214" fg:w="16"/><text x="89.9696%" y="127.50"></text></g><g><title>find_next_bit (15 samples, 0.02%)</title><rect x="89.7368%" y="133" width="0.0162%" height="15" fill="rgb(238,224,15)" fg:x="83230" fg:w="15"/><text x="89.9868%" y="143.50"></text></g><g><title>__update_idle_core (256 samples, 0.28%)</title><rect x="89.4802%" y="149" width="0.2760%" height="15" fill="rgb(241,136,10)" fg:x="82992" fg:w="256"/><text x="89.7302%" y="159.50"></text></g><g><title>available_idle_cpu (21 samples, 0.02%)</title><rect x="89.7562%" y="149" width="0.0226%" height="15" fill="rgb(208,32,45)" fg:x="83248" fg:w="21"/><text x="90.0062%" y="159.50"></text></g><g><title>pick_next_task_idle (330 samples, 0.36%)</title><rect x="89.4338%" y="165" width="0.3558%" height="15" fill="rgb(207,135,9)" fg:x="82949" fg:w="330"/><text x="89.6838%" y="175.50"></text></g><g><title>do_perf_sw_event.constprop.0 (108 samples, 0.12%)</title><rect x="89.9503%" y="133" width="0.1164%" height="15" fill="rgb(206,86,44)" fg:x="83428" fg:w="108"/><text x="90.2003%" y="143.50"></text></g><g><title>___perf_sw_event (195 samples, 0.21%)</title><rect x="89.8964%" y="149" width="0.2102%" height="15" fill="rgb(245,177,15)" fg:x="83378" fg:w="195"/><text x="90.1464%" y="159.50"></text></g><g><title>rcu_read_unlock_strict (37 samples, 0.04%)</title><rect x="90.0667%" y="133" width="0.0399%" height="15" fill="rgb(206,64,50)" fg:x="83536" fg:w="37"/><text x="90.3167%" y="143.50"></text></g><g><title>_raw_spin_lock (198 samples, 0.21%)</title><rect x="90.1401%" y="133" width="0.2135%" height="15" fill="rgb(234,36,40)" fg:x="83604" fg:w="198"/><text x="90.3901%" y="143.50"></text></g><g><title>intel_pmu_disable_all (12 samples, 0.01%)</title><rect x="90.5282%" y="101" width="0.0129%" height="15" fill="rgb(213,64,8)" fg:x="83964" fg:w="12"/><text x="90.7782%" y="111.50"></text></g><g><title>x86_pmu_disable (22 samples, 0.02%)</title><rect x="90.5239%" y="117" width="0.0237%" height="15" fill="rgb(210,75,36)" fg:x="83960" fg:w="22"/><text x="90.7739%" y="127.50"></text></g><g><title>perf_event_context_sched_out (200 samples, 0.22%)</title><rect x="90.3535%" y="133" width="0.2156%" height="15" fill="rgb(229,88,21)" fg:x="83802" fg:w="200"/><text x="90.6035%" y="143.50"></text></g><g><title>x86_pmu_enable (20 samples, 0.02%)</title><rect x="90.5476%" y="117" width="0.0216%" height="15" fill="rgb(252,204,47)" fg:x="83982" fg:w="20"/><text x="90.7976%" y="127.50"></text></g><g><title>intel_pmu_enable_all (20 samples, 0.02%)</title><rect x="90.5476%" y="101" width="0.0216%" height="15" fill="rgb(208,77,27)" fg:x="83982" fg:w="20"/><text x="90.7976%" y="111.50"></text></g><g><title>native_write_msr (20 samples, 0.02%)</title><rect x="90.5476%" y="85" width="0.0216%" height="15" fill="rgb(221,76,26)" fg:x="83982" fg:w="20"/><text x="90.7976%" y="95.50"></text></g><g><title>__perf_event_task_sched_out (467 samples, 0.50%)</title><rect x="90.1066%" y="149" width="0.5035%" height="15" fill="rgb(225,139,18)" fg:x="83573" fg:w="467"/><text x="90.3566%" y="159.50"></text></g><g><title>x86_pmu_disable (32 samples, 0.03%)</title><rect x="90.5756%" y="133" width="0.0345%" height="15" fill="rgb(230,137,11)" fg:x="84008" fg:w="32"/><text x="90.8256%" y="143.50"></text></g><g><title>prepare_task_switch (776 samples, 0.84%)</title><rect x="89.7896%" y="165" width="0.8367%" height="15" fill="rgb(212,28,1)" fg:x="83279" fg:w="776"/><text x="90.0396%" y="175.50"></text></g><g><title>psi_task_change (19 samples, 0.02%)</title><rect x="90.6263%" y="165" width="0.0205%" height="15" fill="rgb(248,164,17)" fg:x="84055" fg:w="19"/><text x="90.8763%" y="175.50"></text></g><g><title>native_sched_clock (22 samples, 0.02%)</title><rect x="90.7632%" y="101" width="0.0237%" height="15" fill="rgb(222,171,42)" fg:x="84182" fg:w="22"/><text x="91.0132%" y="111.50"></text></g><g><title>psi_group_change (66 samples, 0.07%)</title><rect x="90.7169%" y="149" width="0.0712%" height="15" fill="rgb(243,84,45)" fg:x="84139" fg:w="66"/><text x="90.9669%" y="159.50"></text></g><g><title>record_times (33 samples, 0.04%)</title><rect x="90.7525%" y="133" width="0.0356%" height="15" fill="rgb(252,49,23)" fg:x="84172" fg:w="33"/><text x="91.0025%" y="143.50"></text></g><g><title>sched_clock_cpu (27 samples, 0.03%)</title><rect x="90.7589%" y="117" width="0.0291%" height="15" fill="rgb(215,19,7)" fg:x="84178" fg:w="27"/><text x="91.0089%" y="127.50"></text></g><g><title>psi_task_switch (133 samples, 0.14%)</title><rect x="90.6468%" y="165" width="0.1434%" height="15" fill="rgb(238,81,41)" fg:x="84074" fg:w="133"/><text x="90.8968%" y="175.50"></text></g><g><title>put_prev_entity (10 samples, 0.01%)</title><rect x="90.7902%" y="165" width="0.0108%" height="15" fill="rgb(210,199,37)" fg:x="84207" fg:w="10"/><text x="91.0402%" y="175.50"></text></g><g><title>check_cfs_rq_runtime (11 samples, 0.01%)</title><rect x="90.8808%" y="149" width="0.0119%" height="15" fill="rgb(244,192,49)" fg:x="84291" fg:w="11"/><text x="91.1308%" y="159.50"></text></g><g><title>put_prev_task_fair (179 samples, 0.19%)</title><rect x="90.8010%" y="165" width="0.1930%" height="15" fill="rgb(226,211,11)" fg:x="84217" fg:w="179"/><text x="91.0510%" y="175.50"></text></g><g><title>put_prev_entity (94 samples, 0.10%)</title><rect x="90.8926%" y="149" width="0.1013%" height="15" fill="rgb(236,162,54)" fg:x="84302" fg:w="94"/><text x="91.1426%" y="159.50"></text></g><g><title>rcu_note_context_switch (19 samples, 0.02%)</title><rect x="90.9940%" y="165" width="0.0205%" height="15" fill="rgb(220,229,9)" fg:x="84396" fg:w="19"/><text x="91.2440%" y="175.50"></text></g><g><title>rcu_qs (13 samples, 0.01%)</title><rect x="91.0145%" y="165" width="0.0140%" height="15" fill="rgb(250,87,22)" fg:x="84415" fg:w="13"/><text x="91.2645%" y="175.50"></text></g><g><title>native_sched_clock (172 samples, 0.19%)</title><rect x="91.1557%" y="133" width="0.1854%" height="15" fill="rgb(239,43,17)" fg:x="84546" fg:w="172"/><text x="91.4057%" y="143.50"></text></g><g><title>__schedule (14,385 samples, 15.51%)</title><rect x="75.8380%" y="181" width="15.5096%" height="15" fill="rgb(231,177,25)" fg:x="70339" fg:w="14385"/><text x="76.0880%" y="191.50">__schedule</text></g><g><title>update_rq_clock (284 samples, 0.31%)</title><rect x="91.0414%" y="165" width="0.3062%" height="15" fill="rgb(219,179,1)" fg:x="84440" fg:w="284"/><text x="91.2914%" y="175.50"></text></g><g><title>sched_clock_cpu (186 samples, 0.20%)</title><rect x="91.1471%" y="149" width="0.2005%" height="15" fill="rgb(238,219,53)" fg:x="84538" fg:w="186"/><text x="91.3971%" y="159.50"></text></g><g><title>_raw_spin_lock (179 samples, 0.19%)</title><rect x="91.3519%" y="181" width="0.1930%" height="15" fill="rgb(232,167,36)" fg:x="84728" fg:w="179"/><text x="91.6019%" y="191.50"></text></g><g><title>prepare_task_switch (10 samples, 0.01%)</title><rect x="91.5708%" y="181" width="0.0108%" height="15" fill="rgb(244,19,51)" fg:x="84931" fg:w="10"/><text x="91.8208%" y="191.50"></text></g><g><title>psi_task_switch (13 samples, 0.01%)</title><rect x="91.5816%" y="181" width="0.0140%" height="15" fill="rgb(224,6,22)" fg:x="84941" fg:w="13"/><text x="91.8316%" y="191.50"></text></g><g><title>put_prev_task_fair (40 samples, 0.04%)</title><rect x="91.5956%" y="181" width="0.0431%" height="15" fill="rgb(224,145,5)" fg:x="84954" fg:w="40"/><text x="91.8456%" y="191.50"></text></g><g><title>futex_wait_queue_me (15,568 samples, 16.79%)</title><rect x="74.8881%" y="213" width="16.7851%" height="15" fill="rgb(234,130,49)" fg:x="69458" fg:w="15568"/><text x="75.1381%" y="223.50">futex_wait_queue_me</text></g><g><title>schedule (15,026 samples, 16.20%)</title><rect x="75.4725%" y="197" width="16.2007%" height="15" fill="rgb(254,6,2)" fg:x="70000" fg:w="15026"/><text x="75.7225%" y="207.50">schedule</text></g><g><title>update_rq_clock (28 samples, 0.03%)</title><rect x="91.6430%" y="181" width="0.0302%" height="15" fill="rgb(208,96,46)" fg:x="84998" fg:w="28"/><text x="91.8930%" y="191.50"></text></g><g><title>futex_wait_setup (973 samples, 1.05%)</title><rect x="91.6732%" y="213" width="1.0491%" height="15" fill="rgb(239,3,39)" fg:x="85026" fg:w="973"/><text x="91.9232%" y="223.50"></text></g><g><title>get_futex_key (157 samples, 0.17%)</title><rect x="92.5530%" y="197" width="0.1693%" height="15" fill="rgb(233,210,1)" fg:x="85842" fg:w="157"/><text x="92.8030%" y="207.50"></text></g><g><title>get_futex_key (11 samples, 0.01%)</title><rect x="92.7223%" y="213" width="0.0119%" height="15" fill="rgb(244,137,37)" fg:x="85999" fg:w="11"/><text x="92.9723%" y="223.50"></text></g><g><title>hash_futex (218 samples, 0.24%)</title><rect x="92.7342%" y="213" width="0.2350%" height="15" fill="rgb(240,136,2)" fg:x="86010" fg:w="218"/><text x="92.9842%" y="223.50"></text></g><g><title>plist_add (162 samples, 0.17%)</title><rect x="92.9692%" y="213" width="0.1747%" height="15" fill="rgb(239,18,37)" fg:x="86228" fg:w="162"/><text x="93.2192%" y="223.50"></text></g><g><title>futex_wait (17,907 samples, 19.31%)</title><rect x="73.8531%" y="229" width="19.3069%" height="15" fill="rgb(218,185,22)" fg:x="68498" fg:w="17907"/><text x="74.1031%" y="239.50">futex_wait</text></g><g><title>schedule (15 samples, 0.02%)</title><rect x="93.1439%" y="213" width="0.0162%" height="15" fill="rgb(225,218,4)" fg:x="86390" fg:w="15"/><text x="93.3939%" y="223.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.02%)</title><rect x="93.1600%" y="229" width="0.0237%" height="15" fill="rgb(230,182,32)" fg:x="86405" fg:w="22"/><text x="93.4100%" y="239.50"></text></g><g><title>do_futex (18,076 samples, 19.49%)</title><rect x="73.7097%" y="245" width="19.4892%" height="15" fill="rgb(242,56,43)" fg:x="68365" fg:w="18076"/><text x="73.9597%" y="255.50">do_futex</text></g><g><title>futex_wait_setup (14 samples, 0.02%)</title><rect x="93.1838%" y="229" width="0.0151%" height="15" fill="rgb(233,99,24)" fg:x="86427" fg:w="14"/><text x="93.4338%" y="239.50"></text></g><g><title>__x64_sys_futex (18,369 samples, 19.81%)</title><rect x="73.4218%" y="261" width="19.8051%" height="15" fill="rgb(234,209,42)" fg:x="68098" fg:w="18369"/><text x="73.6718%" y="271.50">__x64_sys_futex</text></g><g><title>futex_wait (26 samples, 0.03%)</title><rect x="93.1988%" y="245" width="0.0280%" height="15" fill="rgb(227,7,12)" fg:x="86441" fg:w="26"/><text x="93.4488%" y="255.50"></text></g><g><title>do_futex (33 samples, 0.04%)</title><rect x="93.2269%" y="261" width="0.0356%" height="15" fill="rgb(245,203,43)" fg:x="86467" fg:w="33"/><text x="93.4769%" y="271.50"></text></g><g><title>syscall_enter_from_user_mode (35 samples, 0.04%)</title><rect x="93.2711%" y="261" width="0.0377%" height="15" fill="rgb(238,205,33)" fg:x="86508" fg:w="35"/><text x="93.5211%" y="271.50"></text></g><g><title>copy_kernel_to_fpregs (27 samples, 0.03%)</title><rect x="93.4274%" y="229" width="0.0291%" height="15" fill="rgb(231,56,7)" fg:x="86653" fg:w="27"/><text x="93.6774%" y="239.50"></text></g><g><title>fpregs_assert_state_consistent (25 samples, 0.03%)</title><rect x="93.4565%" y="229" width="0.0270%" height="15" fill="rgb(244,186,29)" fg:x="86680" fg:w="25"/><text x="93.7065%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (1,204 samples, 1.30%)</title><rect x="93.3714%" y="245" width="1.2981%" height="15" fill="rgb(234,111,31)" fg:x="86601" fg:w="1204"/><text x="93.6214%" y="255.50"></text></g><g><title>switch_fpu_return (1,100 samples, 1.19%)</title><rect x="93.4835%" y="229" width="1.1860%" height="15" fill="rgb(241,149,10)" fg:x="86705" fg:w="1100"/><text x="93.7335%" y="239.50"></text></g><g><title>copy_kernel_to_fpregs (835 samples, 0.90%)</title><rect x="93.7692%" y="213" width="0.9003%" height="15" fill="rgb(249,206,44)" fg:x="86970" fg:w="835"/><text x="94.0192%" y="223.50"></text></g><g><title>fpregs_assert_state_consistent (18 samples, 0.02%)</title><rect x="94.6695%" y="245" width="0.0194%" height="15" fill="rgb(251,153,30)" fg:x="87805" fg:w="18"/><text x="94.9195%" y="255.50"></text></g><g><title>do_syscall_64 (19,943 samples, 21.50%)</title><rect x="73.2019%" y="277" width="21.5021%" height="15" fill="rgb(239,152,38)" fg:x="67894" fg:w="19943"/><text x="73.4519%" y="287.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (1,294 samples, 1.40%)</title><rect x="93.3088%" y="261" width="1.3952%" height="15" fill="rgb(249,139,47)" fg:x="86543" fg:w="1294"/><text x="93.5588%" y="271.50"></text></g><g><title>switch_fpu_return (14 samples, 0.02%)</title><rect x="94.6889%" y="245" width="0.0151%" height="15" fill="rgb(244,64,35)" fg:x="87823" fg:w="14"/><text x="94.9389%" y="255.50"></text></g><g><title>syscall_enter_from_user_mode (15 samples, 0.02%)</title><rect x="94.7040%" y="277" width="0.0162%" height="15" fill="rgb(216,46,15)" fg:x="87837" fg:w="15"/><text x="94.9540%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20,535 samples, 22.14%)</title><rect x="72.6434%" y="293" width="22.1404%" height="15" fill="rgb(250,74,19)" fg:x="67376" fg:w="20535"/><text x="72.8934%" y="303.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (59 samples, 0.06%)</title><rect x="94.7202%" y="277" width="0.0636%" height="15" fill="rgb(249,42,33)" fg:x="87852" fg:w="59"/><text x="94.9702%" y="287.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (22,342 samples, 24.09%)</title><rect x="70.8439%" y="341" width="24.0887%" height="15" fill="rgb(242,149,17)" fg:x="65707" fg:w="22342"/><text x="71.0939%" y="351.50">&lt;parking_lot_core::thread_parker::imp:..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (21,732 samples, 23.43%)</title><rect x="71.5016%" y="325" width="23.4310%" height="15" fill="rgb(244,29,21)" fg:x="66317" fg:w="21732"/><text x="71.7516%" y="335.50">parking_lot_core::thread_parker::imp:..</text></g><g><title>syscall (21,402 samples, 23.08%)</title><rect x="71.8574%" y="309" width="23.0752%" height="15" fill="rgb(220,130,37)" fg:x="66647" fg:w="21402"/><text x="72.1074%" y="319.50">syscall</text></g><g><title>syscall_return_via_sysret (137 samples, 0.15%)</title><rect x="94.7848%" y="293" width="0.1477%" height="15" fill="rgb(211,67,2)" fg:x="87912" fg:w="137"/><text x="95.0348%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.01%)</title><rect x="94.9347%" y="341" width="0.0108%" height="15" fill="rgb(235,68,52)" fg:x="88051" fg:w="10"/><text x="95.1847%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.01%)</title><rect x="94.9347%" y="325" width="0.0108%" height="15" fill="rgb(246,142,3)" fg:x="88051" fg:w="10"/><text x="95.1847%" y="335.50"></text></g><g><title>core::mem::replace (10 samples, 0.01%)</title><rect x="94.9347%" y="309" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="88051" fg:w="10"/><text x="95.1847%" y="319.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="94.9347%" y="293" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="88051" fg:w="10"/><text x="95.1847%" y="303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.02%)</title><rect x="94.9455%" y="341" width="0.0151%" height="15" fill="rgb(241,98,45)" fg:x="88061" fg:w="14"/><text x="95.1955%" y="351.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow::{{closure}} (14 samples, 0.02%)</title><rect x="94.9455%" y="325" width="0.0151%" height="15" fill="rgb(254,28,30)" fg:x="88061" fg:w="14"/><text x="95.1955%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (13 samples, 0.01%)</title><rect x="94.9466%" y="309" width="0.0140%" height="15" fill="rgb(241,142,54)" fg:x="88062" fg:w="13"/><text x="95.1966%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="94.9466%" y="293" width="0.0140%" height="15" fill="rgb(222,85,15)" fg:x="88062" fg:w="13"/><text x="95.1966%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (18 samples, 0.02%)</title><rect x="94.9681%" y="341" width="0.0194%" height="15" fill="rgb(210,85,47)" fg:x="88082" fg:w="18"/><text x="95.2181%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="94.9681%" y="325" width="0.0194%" height="15" fill="rgb(224,206,25)" fg:x="88082" fg:w="18"/><text x="95.2181%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (13 samples, 0.01%)</title><rect x="95.0199%" y="325" width="0.0140%" height="15" fill="rgb(243,201,19)" fg:x="88130" fg:w="13"/><text x="95.2699%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (349 samples, 0.38%)</title><rect x="95.0598%" y="309" width="0.3763%" height="15" fill="rgb(236,59,4)" fg:x="88167" fg:w="349"/><text x="95.3098%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (349 samples, 0.38%)</title><rect x="95.0598%" y="293" width="0.3763%" height="15" fill="rgb(254,179,45)" fg:x="88167" fg:w="349"/><text x="95.3098%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (30 samples, 0.03%)</title><rect x="95.4469%" y="293" width="0.0323%" height="15" fill="rgb(226,14,10)" fg:x="88526" fg:w="30"/><text x="95.6969%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="95.4469%" y="277" width="0.0323%" height="15" fill="rgb(244,27,41)" fg:x="88526" fg:w="30"/><text x="95.6969%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 0.05%)</title><rect x="95.4792%" y="293" width="0.0474%" height="15" fill="rgb(235,35,32)" fg:x="88556" fg:w="44"/><text x="95.7292%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.05%)</title><rect x="95.4792%" y="277" width="0.0474%" height="15" fill="rgb(218,68,31)" fg:x="88556" fg:w="44"/><text x="95.7292%" y="287.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (78 samples, 0.08%)</title><rect x="95.5266%" y="277" width="0.0841%" height="15" fill="rgb(207,120,37)" fg:x="88600" fg:w="78"/><text x="95.7766%" y="287.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (73 samples, 0.08%)</title><rect x="95.5320%" y="261" width="0.0787%" height="15" fill="rgb(227,98,0)" fg:x="88605" fg:w="73"/><text x="95.7820%" y="271.50"></text></g><g><title>core::hint::spin_loop (73 samples, 0.08%)</title><rect x="95.5320%" y="245" width="0.0787%" height="15" fill="rgb(207,7,3)" fg:x="88605" fg:w="73"/><text x="95.7820%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (73 samples, 0.08%)</title><rect x="95.5320%" y="229" width="0.0787%" height="15" fill="rgb(206,98,19)" fg:x="88605" fg:w="73"/><text x="95.7820%" y="239.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (81 samples, 0.09%)</title><rect x="95.5266%" y="293" width="0.0873%" height="15" fill="rgb(217,5,26)" fg:x="88600" fg:w="81"/><text x="95.7766%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (588 samples, 0.63%)</title><rect x="94.9875%" y="341" width="0.6340%" height="15" fill="rgb(235,190,38)" fg:x="88100" fg:w="588"/><text x="95.2375%" y="351.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (541 samples, 0.58%)</title><rect x="95.0382%" y="325" width="0.5833%" height="15" fill="rgb(247,86,24)" fg:x="88147" fg:w="541"/><text x="95.2882%" y="335.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (172 samples, 0.19%)</title><rect x="95.4361%" y="309" width="0.1854%" height="15" fill="rgb(205,101,16)" fg:x="88516" fg:w="172"/><text x="95.6861%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (568 samples, 0.61%)</title><rect x="95.6366%" y="325" width="0.6124%" height="15" fill="rgb(246,168,33)" fg:x="88702" fg:w="568"/><text x="95.8866%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (568 samples, 0.61%)</title><rect x="95.6366%" y="309" width="0.6124%" height="15" fill="rgb(231,114,1)" fg:x="88702" fg:w="568"/><text x="95.8866%" y="319.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (23,695 samples, 25.55%)</title><rect x="70.7037%" y="357" width="25.5474%" height="15" fill="rgb(207,184,53)" fg:x="65577" fg:w="23695"/><text x="70.9537%" y="367.50">parking_lot_core::parking_lot::park::{{cl..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (584 samples, 0.63%)</title><rect x="95.6215%" y="341" width="0.6297%" height="15" fill="rgb(224,95,51)" fg:x="88688" fg:w="584"/><text x="95.8715%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::park (23,757 samples, 25.61%)</title><rect x="70.6929%" y="389" width="25.6143%" height="15" fill="rgb(212,188,45)" fg:x="65567" fg:w="23757"/><text x="70.9429%" y="399.50">parking_lot_core::parking_lot::park</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (23,757 samples, 25.61%)</title><rect x="70.6929%" y="373" width="25.6143%" height="15" fill="rgb(223,154,38)" fg:x="65567" fg:w="23757"/><text x="70.9429%" y="383.50">parking_lot_core::parking_lot::with_threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 0.06%)</title><rect x="96.2512%" y="357" width="0.0561%" height="15" fill="rgb(251,22,52)" fg:x="89272" fg:w="52"/><text x="96.5012%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (52 samples, 0.06%)</title><rect x="96.2512%" y="341" width="0.0561%" height="15" fill="rgb(229,209,22)" fg:x="89272" fg:w="52"/><text x="96.5012%" y="351.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (52 samples, 0.06%)</title><rect x="96.2512%" y="325" width="0.0561%" height="15" fill="rgb(234,138,34)" fg:x="89272" fg:w="52"/><text x="96.5012%" y="335.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (47 samples, 0.05%)</title><rect x="96.2566%" y="309" width="0.0507%" height="15" fill="rgb(212,95,11)" fg:x="89277" fg:w="47"/><text x="96.5066%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (47 samples, 0.05%)</title><rect x="96.2566%" y="293" width="0.0507%" height="15" fill="rgb(240,179,47)" fg:x="89277" fg:w="47"/><text x="96.5066%" y="303.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (17 samples, 0.02%)</title><rect x="96.3072%" y="373" width="0.0183%" height="15" fill="rgb(240,163,11)" fg:x="89324" fg:w="17"/><text x="96.5572%" y="383.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (17 samples, 0.02%)</title><rect x="96.3072%" y="357" width="0.0183%" height="15" fill="rgb(236,37,12)" fg:x="89324" fg:w="17"/><text x="96.5572%" y="367.50"></text></g><g><title>core::hint::spin_loop (17 samples, 0.02%)</title><rect x="96.3072%" y="341" width="0.0183%" height="15" fill="rgb(232,164,16)" fg:x="89324" fg:w="17"/><text x="96.5572%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (17 samples, 0.02%)</title><rect x="96.3072%" y="325" width="0.0183%" height="15" fill="rgb(244,205,15)" fg:x="89324" fg:w="17"/><text x="96.5572%" y="335.50"></text></g><g><title>pick_next_task_fair (12 samples, 0.01%)</title><rect x="96.3579%" y="245" width="0.0129%" height="15" fill="rgb(223,117,47)" fg:x="89371" fg:w="12"/><text x="96.6079%" y="255.50"></text></g><g><title>__schedule (36 samples, 0.04%)</title><rect x="96.3428%" y="261" width="0.0388%" height="15" fill="rgb(244,107,35)" fg:x="89357" fg:w="36"/><text x="96.5928%" y="271.50"></text></g><g><title>schedule (37 samples, 0.04%)</title><rect x="96.3428%" y="277" width="0.0399%" height="15" fill="rgb(205,140,8)" fg:x="89357" fg:w="37"/><text x="96.5928%" y="287.50"></text></g><g><title>do_sched_yield (41 samples, 0.04%)</title><rect x="96.3396%" y="293" width="0.0442%" height="15" fill="rgb(228,84,46)" fg:x="89354" fg:w="41"/><text x="96.5896%" y="303.50"></text></g><g><title>__x64_sys_sched_yield (43 samples, 0.05%)</title><rect x="96.3385%" y="309" width="0.0464%" height="15" fill="rgb(254,188,9)" fg:x="89353" fg:w="43"/><text x="96.5885%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.05%)</title><rect x="96.3353%" y="341" width="0.0518%" height="15" fill="rgb(206,112,54)" fg:x="89350" fg:w="48"/><text x="96.5853%" y="351.50"></text></g><g><title>do_syscall_64 (46 samples, 0.05%)</title><rect x="96.3374%" y="325" width="0.0496%" height="15" fill="rgb(216,84,49)" fg:x="89352" fg:w="46"/><text x="96.5874%" y="335.50"></text></g><g><title>__GI___sched_yield (57 samples, 0.06%)</title><rect x="96.3266%" y="357" width="0.0615%" height="15" fill="rgb(214,194,35)" fg:x="89342" fg:w="57"/><text x="96.5766%" y="367.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (24,945 samples, 26.90%)</title><rect x="69.4940%" y="437" width="26.8952%" height="15" fill="rgb(249,28,3)" fg:x="64455" fg:w="24945"/><text x="69.7440%" y="447.50">lock_api::mutex::Mutex&lt;R,T&gt;::lock</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (24,945 samples, 26.90%)</title><rect x="69.4940%" y="421" width="26.8952%" height="15" fill="rgb(222,56,52)" fg:x="64455" fg:w="24945"/><text x="69.7440%" y="431.50">&lt;parking_lot::raw_mutex::RawMutex as lock_a..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (24,545 samples, 26.46%)</title><rect x="69.9253%" y="405" width="26.4639%" height="15" fill="rgb(245,217,50)" fg:x="64855" fg:w="24545"/><text x="70.1753%" y="415.50">parking_lot::raw_mutex::RawMutex::lock_slow</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (76 samples, 0.08%)</title><rect x="96.3072%" y="389" width="0.0819%" height="15" fill="rgb(213,201,24)" fg:x="89324" fg:w="76"/><text x="96.5572%" y="399.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (59 samples, 0.06%)</title><rect x="96.3256%" y="373" width="0.0636%" height="15" fill="rgb(248,116,28)" fg:x="89341" fg:w="59"/><text x="96.5756%" y="383.50"></text></g><g><title>rust_pg::do_work (87,479 samples, 94.32%)</title><rect x="2.0733%" y="453" width="94.3180%" height="15" fill="rgb(219,72,43)" fg:x="1923" fg:w="87479"/><text x="2.3233%" y="463.50">rust_pg::do_work</text></g><g><title>std::sync::mpsc::oneshot::Packet&lt;T&gt;::recv (35 samples, 0.04%)</title><rect x="96.5153%" y="437" width="0.0377%" height="15" fill="rgb(209,138,14)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="447.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (35 samples, 0.04%)</title><rect x="96.5153%" y="421" width="0.0377%" height="15" fill="rgb(222,18,33)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="431.50"></text></g><g><title>std::thread::park (35 samples, 0.04%)</title><rect x="96.5153%" y="405" width="0.0377%" height="15" fill="rgb(213,199,7)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="415.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (35 samples, 0.04%)</title><rect x="96.5153%" y="389" width="0.0377%" height="15" fill="rgb(250,110,10)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (35 samples, 0.04%)</title><rect x="96.5153%" y="373" width="0.0377%" height="15" fill="rgb(248,123,6)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="383.50"></text></g><g><title>syscall (35 samples, 0.04%)</title><rect x="96.5153%" y="357" width="0.0377%" height="15" fill="rgb(206,91,31)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.04%)</title><rect x="96.5153%" y="341" width="0.0377%" height="15" fill="rgb(211,154,13)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="351.50"></text></g><g><title>do_syscall_64 (35 samples, 0.04%)</title><rect x="96.5153%" y="325" width="0.0377%" height="15" fill="rgb(225,148,7)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="335.50"></text></g><g><title>__x64_sys_futex (35 samples, 0.04%)</title><rect x="96.5153%" y="309" width="0.0377%" height="15" fill="rgb(220,160,43)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="319.50"></text></g><g><title>do_futex (35 samples, 0.04%)</title><rect x="96.5153%" y="293" width="0.0377%" height="15" fill="rgb(213,52,39)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="303.50"></text></g><g><title>futex_wait (35 samples, 0.04%)</title><rect x="96.5153%" y="277" width="0.0377%" height="15" fill="rgb(243,137,7)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="287.50"></text></g><g><title>futex_wait_queue_me (35 samples, 0.04%)</title><rect x="96.5153%" y="261" width="0.0377%" height="15" fill="rgb(230,79,13)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="271.50"></text></g><g><title>schedule (35 samples, 0.04%)</title><rect x="96.5153%" y="245" width="0.0377%" height="15" fill="rgb(247,105,23)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="255.50"></text></g><g><title>__schedule (35 samples, 0.04%)</title><rect x="96.5153%" y="229" width="0.0377%" height="15" fill="rgb(223,179,41)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (35 samples, 0.04%)</title><rect x="96.5153%" y="213" width="0.0377%" height="15" fill="rgb(218,9,34)" fg:x="89517" fg:w="35"/><text x="96.7653%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (34 samples, 0.04%)</title><rect x="96.5164%" y="197" width="0.0367%" height="15" fill="rgb(222,106,8)" fg:x="89518" fg:w="34"/><text x="96.7664%" y="207.50"></text></g><g><title>perf_event_context_sched_in (34 samples, 0.04%)</title><rect x="96.5164%" y="181" width="0.0367%" height="15" fill="rgb(211,220,0)" fg:x="89518" fg:w="34"/><text x="96.7664%" y="191.50"></text></g><g><title>x86_pmu_enable (34 samples, 0.04%)</title><rect x="96.5164%" y="165" width="0.0367%" height="15" fill="rgb(229,52,16)" fg:x="89518" fg:w="34"/><text x="96.7664%" y="175.50"></text></g><g><title>intel_pmu_enable_all (34 samples, 0.04%)</title><rect x="96.5164%" y="149" width="0.0367%" height="15" fill="rgb(212,155,18)" fg:x="89518" fg:w="34"/><text x="96.7664%" y="159.50"></text></g><g><title>native_write_msr (34 samples, 0.04%)</title><rect x="96.5164%" y="133" width="0.0367%" height="15" fill="rgb(242,21,14)" fg:x="89518" fg:w="34"/><text x="96.7664%" y="143.50"></text></g><g><title>dequeue_task_fair (10 samples, 0.01%)</title><rect x="96.5886%" y="197" width="0.0108%" height="15" fill="rgb(222,19,48)" fg:x="89585" fg:w="10"/><text x="96.8386%" y="207.50"></text></g><g><title>psi_task_change (11 samples, 0.01%)</title><rect x="96.5994%" y="197" width="0.0119%" height="15" fill="rgb(232,45,27)" fg:x="89595" fg:w="11"/><text x="96.8494%" y="207.50"></text></g><g><title>psi_group_change (11 samples, 0.01%)</title><rect x="96.5994%" y="181" width="0.0119%" height="15" fill="rgb(249,103,42)" fg:x="89595" fg:w="11"/><text x="96.8494%" y="191.50"></text></g><g><title>dequeue_task (22 samples, 0.02%)</title><rect x="96.5886%" y="213" width="0.0237%" height="15" fill="rgb(246,81,33)" fg:x="89585" fg:w="22"/><text x="96.8386%" y="223.50"></text></g><g><title>psi_task_switch (13 samples, 0.01%)</title><rect x="96.6361%" y="213" width="0.0140%" height="15" fill="rgb(252,33,42)" fg:x="89629" fg:w="13"/><text x="96.8861%" y="223.50"></text></g><g><title>psi_group_change (10 samples, 0.01%)</title><rect x="96.6393%" y="197" width="0.0108%" height="15" fill="rgb(209,212,41)" fg:x="89632" fg:w="10"/><text x="96.8893%" y="207.50"></text></g><g><title>__schedule (63 samples, 0.07%)</title><rect x="96.5833%" y="229" width="0.0679%" height="15" fill="rgb(207,154,6)" fg:x="89580" fg:w="63"/><text x="96.8333%" y="239.50"></text></g><g><title>futex_wait_queue_me (64 samples, 0.07%)</title><rect x="96.5833%" y="261" width="0.0690%" height="15" fill="rgb(223,64,47)" fg:x="89580" fg:w="64"/><text x="96.8333%" y="271.50"></text></g><g><title>schedule (64 samples, 0.07%)</title><rect x="96.5833%" y="245" width="0.0690%" height="15" fill="rgb(211,161,38)" fg:x="89580" fg:w="64"/><text x="96.8333%" y="255.50"></text></g><g><title>__x64_sys_futex (70 samples, 0.08%)</title><rect x="96.5789%" y="309" width="0.0755%" height="15" fill="rgb(219,138,40)" fg:x="89576" fg:w="70"/><text x="96.8289%" y="319.50"></text></g><g><title>do_futex (68 samples, 0.07%)</title><rect x="96.5811%" y="293" width="0.0733%" height="15" fill="rgb(241,228,46)" fg:x="89578" fg:w="68"/><text x="96.8311%" y="303.50"></text></g><g><title>futex_wait (68 samples, 0.07%)</title><rect x="96.5811%" y="277" width="0.0733%" height="15" fill="rgb(223,209,38)" fg:x="89578" fg:w="68"/><text x="96.8311%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (80 samples, 0.09%)</title><rect x="96.5746%" y="341" width="0.0863%" height="15" fill="rgb(236,164,45)" fg:x="89572" fg:w="80"/><text x="96.8246%" y="351.50"></text></g><g><title>do_syscall_64 (78 samples, 0.08%)</title><rect x="96.5768%" y="325" width="0.0841%" height="15" fill="rgb(231,15,5)" fg:x="89574" fg:w="78"/><text x="96.8268%" y="335.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (92 samples, 0.10%)</title><rect x="96.5638%" y="421" width="0.0992%" height="15" fill="rgb(252,35,15)" fg:x="89562" fg:w="92"/><text x="96.8138%" y="431.50"></text></g><g><title>std::thread::park (92 samples, 0.10%)</title><rect x="96.5638%" y="405" width="0.0992%" height="15" fill="rgb(248,181,18)" fg:x="89562" fg:w="92"/><text x="96.8138%" y="415.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (92 samples, 0.10%)</title><rect x="96.5638%" y="389" width="0.0992%" height="15" fill="rgb(233,39,42)" fg:x="89562" fg:w="92"/><text x="96.8138%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (90 samples, 0.10%)</title><rect x="96.5660%" y="373" width="0.0970%" height="15" fill="rgb(238,110,33)" fg:x="89564" fg:w="90"/><text x="96.8160%" y="383.50"></text></g><g><title>syscall (90 samples, 0.10%)</title><rect x="96.5660%" y="357" width="0.0970%" height="15" fill="rgb(233,195,10)" fg:x="89564" fg:w="90"/><text x="96.8160%" y="367.50"></text></g><g><title>__GI___libc_free (885 samples, 0.95%)</title><rect x="96.9121%" y="405" width="0.9542%" height="15" fill="rgb(254,105,3)" fg:x="89885" fg:w="885"/><text x="97.1621%" y="415.50"></text></g><g><title>_int_free (678 samples, 0.73%)</title><rect x="97.1353%" y="389" width="0.7310%" height="15" fill="rgb(221,225,9)" fg:x="90092" fg:w="678"/><text x="97.3853%" y="399.50"></text></g><g><title>free_perturb (12 samples, 0.01%)</title><rect x="97.8533%" y="373" width="0.0129%" height="15" fill="rgb(224,227,45)" fg:x="90758" fg:w="12"/><text x="98.1033%" y="383.50"></text></g><g><title>__rdl_dealloc (81 samples, 0.09%)</title><rect x="97.8663%" y="405" width="0.0873%" height="15" fill="rgb(229,198,43)" fg:x="90770" fg:w="81"/><text x="98.1163%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (81 samples, 0.09%)</title><rect x="97.8663%" y="389" width="0.0873%" height="15" fill="rgb(206,209,35)" fg:x="90770" fg:w="81"/><text x="98.1163%" y="399.50"></text></g><g><title>__rust_dealloc (29 samples, 0.03%)</title><rect x="97.9536%" y="405" width="0.0313%" height="15" fill="rgb(245,195,53)" fg:x="90851" fg:w="29"/><text x="98.2036%" y="415.50"></text></g><g><title>rust_pg::WebServer::new::{{closure}}::{{closure}} (89,548 samples, 96.55%)</title><rect x="1.7024%" y="469" width="96.5487%" height="15" fill="rgb(240,92,26)" fg:x="1579" fg:w="89548"/><text x="1.9524%" y="479.50">rust_pg::WebServer::new::{{closure}}::{{closure}}</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (1,725 samples, 1.86%)</title><rect x="96.3913%" y="453" width="1.8599%" height="15" fill="rgb(207,40,23)" fg:x="89402" fg:w="1725"/><text x="96.6413%" y="463.50">s..</text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::recv (1,575 samples, 1.70%)</title><rect x="96.5531%" y="437" width="1.6981%" height="15" fill="rgb(223,111,35)" fg:x="89552" fg:w="1575"/><text x="96.8031%" y="447.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1,470 samples, 1.58%)</title><rect x="96.6663%" y="421" width="1.5849%" height="15" fill="rgb(229,147,28)" fg:x="89657" fg:w="1470"/><text x="96.9163%" y="431.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (247 samples, 0.27%)</title><rect x="97.9849%" y="405" width="0.2663%" height="15" fill="rgb(211,29,28)" fg:x="90880" fg:w="247"/><text x="98.2349%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (151 samples, 0.16%)</title><rect x="98.0884%" y="389" width="0.1628%" height="15" fill="rgb(228,72,33)" fg:x="90976" fg:w="151"/><text x="98.3384%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (151 samples, 0.16%)</title><rect x="98.0884%" y="373" width="0.1628%" height="15" fill="rgb(205,214,31)" fg:x="90976" fg:w="151"/><text x="98.3384%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (12 samples, 0.01%)</title><rect x="98.2566%" y="453" width="0.0129%" height="15" fill="rgb(224,111,15)" fg:x="91132" fg:w="12"/><text x="98.5066%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (12 samples, 0.01%)</title><rect x="98.2566%" y="437" width="0.0129%" height="15" fill="rgb(253,21,26)" fg:x="91132" fg:w="12"/><text x="98.5066%" y="447.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (12 samples, 0.01%)</title><rect x="98.2566%" y="421" width="0.0129%" height="15" fill="rgb(245,139,43)" fg:x="91132" fg:w="12"/><text x="98.5066%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicIsize::fetch_add (119 samples, 0.13%)</title><rect x="98.3590%" y="421" width="0.1283%" height="15" fill="rgb(252,170,7)" fg:x="91227" fg:w="119"/><text x="98.6090%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (119 samples, 0.13%)</title><rect x="98.3590%" y="405" width="0.1283%" height="15" fill="rgb(231,118,14)" fg:x="91227" fg:w="119"/><text x="98.6090%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (24 samples, 0.03%)</title><rect x="98.4873%" y="421" width="0.0259%" height="15" fill="rgb(238,83,0)" fg:x="91346" fg:w="24"/><text x="98.7373%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.03%)</title><rect x="98.4873%" y="405" width="0.0259%" height="15" fill="rgb(221,39,39)" fg:x="91346" fg:w="24"/><text x="98.7373%" y="415.50"></text></g><g><title>select_task_rq_fair (15 samples, 0.02%)</title><rect x="98.5229%" y="229" width="0.0162%" height="15" fill="rgb(222,119,46)" fg:x="91379" fg:w="15"/><text x="98.7729%" y="239.50"></text></g><g><title>select_idle_sibling (11 samples, 0.01%)</title><rect x="98.5272%" y="213" width="0.0119%" height="15" fill="rgb(222,165,49)" fg:x="91383" fg:w="11"/><text x="98.7772%" y="223.50"></text></g><g><title>psi_group_change (12 samples, 0.01%)</title><rect x="98.5466%" y="181" width="0.0129%" height="15" fill="rgb(219,113,52)" fg:x="91401" fg:w="12"/><text x="98.7966%" y="191.50"></text></g><g><title>enqueue_task (20 samples, 0.02%)</title><rect x="98.5391%" y="213" width="0.0216%" height="15" fill="rgb(214,7,15)" fg:x="91394" fg:w="20"/><text x="98.7891%" y="223.50"></text></g><g><title>psi_task_change (13 samples, 0.01%)</title><rect x="98.5466%" y="197" width="0.0140%" height="15" fill="rgb(235,32,4)" fg:x="91401" fg:w="13"/><text x="98.7966%" y="207.50"></text></g><g><title>ttwu_do_activate (25 samples, 0.03%)</title><rect x="98.5391%" y="229" width="0.0270%" height="15" fill="rgb(238,90,54)" fg:x="91394" fg:w="25"/><text x="98.7891%" y="239.50"></text></g><g><title>__x64_sys_futex (47 samples, 0.05%)</title><rect x="98.5186%" y="309" width="0.0507%" height="15" fill="rgb(213,208,19)" fg:x="91375" fg:w="47"/><text x="98.7686%" y="319.50"></text></g><g><title>do_futex (46 samples, 0.05%)</title><rect x="98.5197%" y="293" width="0.0496%" height="15" fill="rgb(233,156,4)" fg:x="91376" fg:w="46"/><text x="98.7697%" y="303.50"></text></g><g><title>futex_wake (46 samples, 0.05%)</title><rect x="98.5197%" y="277" width="0.0496%" height="15" fill="rgb(207,194,5)" fg:x="91376" fg:w="46"/><text x="98.7697%" y="287.50"></text></g><g><title>wake_up_q (44 samples, 0.05%)</title><rect x="98.5218%" y="261" width="0.0474%" height="15" fill="rgb(206,111,30)" fg:x="91378" fg:w="44"/><text x="98.7718%" y="271.50"></text></g><g><title>try_to_wake_up (43 samples, 0.05%)</title><rect x="98.5229%" y="245" width="0.0464%" height="15" fill="rgb(243,70,54)" fg:x="91379" fg:w="43"/><text x="98.7729%" y="255.50"></text></g><g><title>__schedule (22 samples, 0.02%)</title><rect x="98.5703%" y="245" width="0.0237%" height="15" fill="rgb(242,28,8)" fg:x="91423" fg:w="22"/><text x="98.8203%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (24 samples, 0.03%)</title><rect x="98.5693%" y="277" width="0.0259%" height="15" fill="rgb(219,106,18)" fg:x="91422" fg:w="24"/><text x="98.8193%" y="287.50"></text></g><g><title>schedule (23 samples, 0.02%)</title><rect x="98.5703%" y="261" width="0.0248%" height="15" fill="rgb(244,222,10)" fg:x="91423" fg:w="23"/><text x="98.8203%" y="271.50"></text></g><g><title>std::sync::mpsc::blocking::SignalToken::signal (79 samples, 0.09%)</title><rect x="98.5132%" y="421" width="0.0852%" height="15" fill="rgb(236,179,52)" fg:x="91370" fg:w="79"/><text x="98.7632%" y="431.50"></text></g><g><title>std::thread::Thread::unpark (77 samples, 0.08%)</title><rect x="98.5153%" y="405" width="0.0830%" height="15" fill="rgb(213,23,39)" fg:x="91372" fg:w="77"/><text x="98.7653%" y="415.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (77 samples, 0.08%)</title><rect x="98.5153%" y="389" width="0.0830%" height="15" fill="rgb(238,48,10)" fg:x="91372" fg:w="77"/><text x="98.7653%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wake (77 samples, 0.08%)</title><rect x="98.5153%" y="373" width="0.0830%" height="15" fill="rgb(251,196,23)" fg:x="91372" fg:w="77"/><text x="98.7653%" y="383.50"></text></g><g><title>syscall (77 samples, 0.08%)</title><rect x="98.5153%" y="357" width="0.0830%" height="15" fill="rgb(250,152,24)" fg:x="91372" fg:w="77"/><text x="98.7653%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (74 samples, 0.08%)</title><rect x="98.5186%" y="341" width="0.0798%" height="15" fill="rgb(209,150,17)" fg:x="91375" fg:w="74"/><text x="98.7686%" y="351.50"></text></g><g><title>do_syscall_64 (74 samples, 0.08%)</title><rect x="98.5186%" y="325" width="0.0798%" height="15" fill="rgb(234,202,34)" fg:x="91375" fg:w="74"/><text x="98.7686%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (27 samples, 0.03%)</title><rect x="98.5693%" y="309" width="0.0291%" height="15" fill="rgb(253,148,53)" fg:x="91422" fg:w="27"/><text x="98.8193%" y="319.50"></text></g><g><title>exit_to_user_mode_prepare (27 samples, 0.03%)</title><rect x="98.5693%" y="293" width="0.0291%" height="15" fill="rgb(218,129,16)" fg:x="91422" fg:w="27"/><text x="98.8193%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (41 samples, 0.04%)</title><rect x="98.5984%" y="405" width="0.0442%" height="15" fill="rgb(216,85,19)" fg:x="91449" fg:w="41"/><text x="98.8484%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_store (41 samples, 0.04%)</title><rect x="98.5984%" y="389" width="0.0442%" height="15" fill="rgb(235,228,7)" fg:x="91449" fg:w="41"/><text x="98.8484%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (143 samples, 0.15%)</title><rect x="98.6426%" y="405" width="0.1542%" height="15" fill="rgb(245,175,0)" fg:x="91490" fg:w="143"/><text x="98.8926%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (143 samples, 0.15%)</title><rect x="98.6426%" y="389" width="0.1542%" height="15" fill="rgb(208,168,36)" fg:x="91490" fg:w="143"/><text x="98.8926%" y="399.50"></text></g><g><title>down_read (52 samples, 0.06%)</title><rect x="99.3628%" y="245" width="0.0561%" height="15" fill="rgb(246,171,24)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="255.50"></text></g><g><title>rwsem_down_read_slowpath (52 samples, 0.06%)</title><rect x="99.3628%" y="229" width="0.0561%" height="15" fill="rgb(215,142,24)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="239.50"></text></g><g><title>schedule (52 samples, 0.06%)</title><rect x="99.3628%" y="213" width="0.0561%" height="15" fill="rgb(250,187,7)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="223.50"></text></g><g><title>__schedule (52 samples, 0.06%)</title><rect x="99.3628%" y="197" width="0.0561%" height="15" fill="rgb(228,66,33)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="207.50"></text></g><g><title>finish_task_switch.isra.0 (52 samples, 0.06%)</title><rect x="99.3628%" y="181" width="0.0561%" height="15" fill="rgb(234,215,21)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (52 samples, 0.06%)</title><rect x="99.3628%" y="165" width="0.0561%" height="15" fill="rgb(222,191,20)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="175.50"></text></g><g><title>perf_event_context_sched_in (52 samples, 0.06%)</title><rect x="99.3628%" y="149" width="0.0561%" height="15" fill="rgb(245,79,54)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="159.50"></text></g><g><title>x86_pmu_enable (52 samples, 0.06%)</title><rect x="99.3628%" y="133" width="0.0561%" height="15" fill="rgb(240,10,37)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="143.50"></text></g><g><title>intel_pmu_enable_all (52 samples, 0.06%)</title><rect x="99.3628%" y="117" width="0.0561%" height="15" fill="rgb(214,192,32)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="127.50"></text></g><g><title>native_write_msr (52 samples, 0.06%)</title><rect x="99.3628%" y="101" width="0.0561%" height="15" fill="rgb(209,36,54)" fg:x="92158" fg:w="52"/><text x="99.6128%" y="111.50"></text></g><g><title>asm_exc_page_fault (55 samples, 0.06%)</title><rect x="99.3628%" y="293" width="0.0593%" height="15" fill="rgb(220,10,11)" fg:x="92158" fg:w="55"/><text x="99.6128%" y="303.50"></text></g><g><title>exc_page_fault (55 samples, 0.06%)</title><rect x="99.3628%" y="277" width="0.0593%" height="15" fill="rgb(221,106,17)" fg:x="92158" fg:w="55"/><text x="99.6128%" y="287.50"></text></g><g><title>do_user_addr_fault (55 samples, 0.06%)</title><rect x="99.3628%" y="261" width="0.0593%" height="15" fill="rgb(251,142,44)" fg:x="92158" fg:w="55"/><text x="99.6128%" y="271.50"></text></g><g><title>mem_cgroup_charge (10 samples, 0.01%)</title><rect x="99.4641%" y="165" width="0.0108%" height="15" fill="rgb(238,13,15)" fg:x="92252" fg:w="10"/><text x="99.7141%" y="175.50"></text></g><g><title>handle_mm_fault (27 samples, 0.03%)</title><rect x="99.4480%" y="229" width="0.0291%" height="15" fill="rgb(208,107,27)" fg:x="92237" fg:w="27"/><text x="99.6980%" y="239.50"></text></g><g><title>__handle_mm_fault (26 samples, 0.03%)</title><rect x="99.4491%" y="213" width="0.0280%" height="15" fill="rgb(205,136,37)" fg:x="92238" fg:w="26"/><text x="99.6991%" y="223.50"></text></g><g><title>handle_pte_fault (20 samples, 0.02%)</title><rect x="99.4555%" y="197" width="0.0216%" height="15" fill="rgb(250,205,27)" fg:x="92244" fg:w="20"/><text x="99.7055%" y="207.50"></text></g><g><title>do_anonymous_page (20 samples, 0.02%)</title><rect x="99.4555%" y="181" width="0.0216%" height="15" fill="rgb(210,80,43)" fg:x="92244" fg:w="20"/><text x="99.7055%" y="191.50"></text></g><g><title>exc_page_fault (51 samples, 0.05%)</title><rect x="99.4372%" y="261" width="0.0550%" height="15" fill="rgb(247,160,36)" fg:x="92227" fg:w="51"/><text x="99.6872%" y="271.50"></text></g><g><title>do_user_addr_fault (51 samples, 0.05%)</title><rect x="99.4372%" y="245" width="0.0550%" height="15" fill="rgb(234,13,49)" fg:x="92227" fg:w="51"/><text x="99.6872%" y="255.50"></text></g><g><title>up_read (14 samples, 0.02%)</title><rect x="99.4771%" y="229" width="0.0151%" height="15" fill="rgb(234,122,0)" fg:x="92264" fg:w="14"/><text x="99.7271%" y="239.50"></text></g><g><title>asm_exc_page_fault (52 samples, 0.06%)</title><rect x="99.4372%" y="277" width="0.0561%" height="15" fill="rgb(207,146,38)" fg:x="92227" fg:w="52"/><text x="99.6872%" y="287.50"></text></g><g><title>finish_task_switch.isra.0 (45 samples, 0.05%)</title><rect x="99.5159%" y="117" width="0.0485%" height="15" fill="rgb(207,177,25)" fg:x="92300" fg:w="45"/><text x="99.7659%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (45 samples, 0.05%)</title><rect x="99.5159%" y="101" width="0.0485%" height="15" fill="rgb(211,178,42)" fg:x="92300" fg:w="45"/><text x="99.7659%" y="111.50"></text></g><g><title>perf_event_context_sched_in (45 samples, 0.05%)</title><rect x="99.5159%" y="85" width="0.0485%" height="15" fill="rgb(230,69,54)" fg:x="92300" fg:w="45"/><text x="99.7659%" y="95.50"></text></g><g><title>x86_pmu_enable (45 samples, 0.05%)</title><rect x="99.5159%" y="69" width="0.0485%" height="15" fill="rgb(214,135,41)" fg:x="92300" fg:w="45"/><text x="99.7659%" y="79.50"></text></g><g><title>intel_pmu_enable_all (45 samples, 0.05%)</title><rect x="99.5159%" y="53" width="0.0485%" height="15" fill="rgb(237,67,25)" fg:x="92300" fg:w="45"/><text x="99.7659%" y="63.50"></text></g><g><title>native_write_msr (44 samples, 0.05%)</title><rect x="99.5170%" y="37" width="0.0474%" height="15" fill="rgb(222,189,50)" fg:x="92301" fg:w="44"/><text x="99.7670%" y="47.50"></text></g><g><title>down_write_killable (60 samples, 0.06%)</title><rect x="99.5030%" y="181" width="0.0647%" height="15" fill="rgb(245,148,34)" fg:x="92288" fg:w="60"/><text x="99.7530%" y="191.50"></text></g><g><title>rwsem_down_write_slowpath (59 samples, 0.06%)</title><rect x="99.5040%" y="165" width="0.0636%" height="15" fill="rgb(222,29,6)" fg:x="92289" fg:w="59"/><text x="99.7540%" y="175.50"></text></g><g><title>schedule (49 samples, 0.05%)</title><rect x="99.5148%" y="149" width="0.0528%" height="15" fill="rgb(221,189,43)" fg:x="92299" fg:w="49"/><text x="99.7648%" y="159.50"></text></g><g><title>__schedule (49 samples, 0.05%)</title><rect x="99.5148%" y="133" width="0.0528%" height="15" fill="rgb(207,36,27)" fg:x="92299" fg:w="49"/><text x="99.7648%" y="143.50"></text></g><g><title>perf_event_mmap_output (14 samples, 0.02%)</title><rect x="99.5860%" y="101" width="0.0151%" height="15" fill="rgb(217,90,24)" fg:x="92365" fg:w="14"/><text x="99.8360%" y="111.50"></text></g><g><title>perf_event_mmap (28 samples, 0.03%)</title><rect x="99.5730%" y="165" width="0.0302%" height="15" fill="rgb(224,66,35)" fg:x="92353" fg:w="28"/><text x="99.8230%" y="175.50"></text></g><g><title>perf_event_mmap_event (27 samples, 0.03%)</title><rect x="99.5741%" y="149" width="0.0291%" height="15" fill="rgb(221,13,50)" fg:x="92354" fg:w="27"/><text x="99.8241%" y="159.50"></text></g><g><title>perf_iterate_sb (24 samples, 0.03%)</title><rect x="99.5774%" y="133" width="0.0259%" height="15" fill="rgb(236,68,49)" fg:x="92357" fg:w="24"/><text x="99.8274%" y="143.50"></text></g><g><title>perf_iterate_ctx (22 samples, 0.02%)</title><rect x="99.5795%" y="117" width="0.0237%" height="15" fill="rgb(229,146,28)" fg:x="92359" fg:w="22"/><text x="99.8295%" y="127.50"></text></g><g><title>mprotect_fixup (35 samples, 0.04%)</title><rect x="99.5687%" y="181" width="0.0377%" height="15" fill="rgb(225,31,38)" fg:x="92349" fg:w="35"/><text x="99.8187%" y="191.50"></text></g><g><title>up_write (23 samples, 0.02%)</title><rect x="99.6065%" y="181" width="0.0248%" height="15" fill="rgb(250,208,3)" fg:x="92384" fg:w="23"/><text x="99.8565%" y="191.50"></text></g><g><title>wake_up_q (19 samples, 0.02%)</title><rect x="99.6108%" y="165" width="0.0205%" height="15" fill="rgb(246,54,23)" fg:x="92388" fg:w="19"/><text x="99.8608%" y="175.50"></text></g><g><title>try_to_wake_up (18 samples, 0.02%)</title><rect x="99.6119%" y="149" width="0.0194%" height="15" fill="rgb(243,76,11)" fg:x="92389" fg:w="18"/><text x="99.8619%" y="159.50"></text></g><g><title>do_mprotect_pkey (124 samples, 0.13%)</title><rect x="99.4986%" y="197" width="0.1337%" height="15" fill="rgb(245,21,50)" fg:x="92284" fg:w="124"/><text x="99.7486%" y="207.50"></text></g><g><title>grow_heap (131 samples, 0.14%)</title><rect x="99.4933%" y="277" width="0.1412%" height="15" fill="rgb(228,9,43)" fg:x="92279" fg:w="131"/><text x="99.7433%" y="287.50"></text></g><g><title>__GI___mprotect (130 samples, 0.14%)</title><rect x="99.4943%" y="261" width="0.1402%" height="15" fill="rgb(208,100,47)" fg:x="92280" fg:w="130"/><text x="99.7443%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (127 samples, 0.14%)</title><rect x="99.4976%" y="245" width="0.1369%" height="15" fill="rgb(232,26,8)" fg:x="92283" fg:w="127"/><text x="99.7476%" y="255.50"></text></g><g><title>do_syscall_64 (126 samples, 0.14%)</title><rect x="99.4986%" y="229" width="0.1359%" height="15" fill="rgb(216,166,38)" fg:x="92284" fg:w="126"/><text x="99.7486%" y="239.50"></text></g><g><title>__x64_sys_mprotect (126 samples, 0.14%)</title><rect x="99.4986%" y="213" width="0.1359%" height="15" fill="rgb(251,202,51)" fg:x="92284" fg:w="126"/><text x="99.7486%" y="223.50"></text></g><g><title>sysmalloc (198 samples, 0.21%)</title><rect x="99.4264%" y="293" width="0.2135%" height="15" fill="rgb(254,216,34)" fg:x="92217" fg:w="198"/><text x="99.6764%" y="303.50"></text></g><g><title>_int_malloc (627 samples, 0.68%)</title><rect x="98.9736%" y="309" width="0.6760%" height="15" fill="rgb(251,32,27)" fg:x="91797" fg:w="627"/><text x="99.2236%" y="319.50"></text></g><g><title>checked_request2size (16 samples, 0.02%)</title><rect x="99.6496%" y="309" width="0.0173%" height="15" fill="rgb(208,127,28)" fg:x="92424" fg:w="16"/><text x="99.8996%" y="319.50"></text></g><g><title>__GI___libc_malloc (813 samples, 0.88%)</title><rect x="98.8000%" y="325" width="0.8766%" height="15" fill="rgb(224,137,22)" fg:x="91636" fg:w="813"/><text x="99.0500%" y="335.50"></text></g><g><title>__rdl_alloc (13 samples, 0.01%)</title><rect x="99.6765%" y="325" width="0.0140%" height="15" fill="rgb(254,70,32)" fg:x="92449" fg:w="13"/><text x="99.9265%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.01%)</title><rect x="99.6765%" y="309" width="0.0140%" height="15" fill="rgb(229,75,37)" fg:x="92449" fg:w="13"/><text x="99.9265%" y="319.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::push (1,022 samples, 1.10%)</title><rect x="98.5984%" y="421" width="1.1019%" height="15" fill="rgb(252,64,23)" fg:x="91449" fg:w="1022"/><text x="98.8484%" y="431.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Node&lt;T&gt;::new (838 samples, 0.90%)</title><rect x="98.7968%" y="405" width="0.9035%" height="15" fill="rgb(232,162,48)" fg:x="91633" fg:w="838"/><text x="99.0468%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (837 samples, 0.90%)</title><rect x="98.7978%" y="389" width="0.9024%" height="15" fill="rgb(246,160,12)" fg:x="91634" fg:w="837"/><text x="99.0478%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (837 samples, 0.90%)</title><rect x="98.7978%" y="373" width="0.9024%" height="15" fill="rgb(247,166,0)" fg:x="91634" fg:w="837"/><text x="99.0478%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (837 samples, 0.90%)</title><rect x="98.7978%" y="357" width="0.9024%" height="15" fill="rgb(249,219,21)" fg:x="91634" fg:w="837"/><text x="99.0478%" y="367.50"></text></g><g><title>alloc::alloc::alloc (835 samples, 0.90%)</title><rect x="98.8000%" y="341" width="0.9003%" height="15" fill="rgb(205,209,3)" fg:x="91636" fg:w="835"/><text x="99.0500%" y="351.50"></text></g><g><title>std::panic::catch_unwind (90,893 samples, 98.00%)</title><rect x="1.7024%" y="565" width="97.9989%" height="15" fill="rgb(243,44,1)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="575.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (90,893 samples, 98.00%)</title><rect x="1.7024%" y="549" width="97.9989%" height="15" fill="rgb(206,159,16)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="559.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (90,893 samples, 98.00%)</title><rect x="1.7024%" y="533" width="97.9989%" height="15" fill="rgb(244,77,30)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="543.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (90,893 samples, 98.00%)</title><rect x="1.7024%" y="517" width="97.9989%" height="15" fill="rgb(218,69,12)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="527.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (90,893 samples, 98.00%)</title><rect x="1.7024%" y="501" width="97.9989%" height="15" fill="rgb(212,87,7)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="511.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (90,893 samples, 98.00%)</title><rect x="1.7024%" y="485" width="97.9989%" height="15" fill="rgb(245,114,25)" fg:x="1579" fg:w="90893"/><text x="1.9524%" y="495.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust_pg::WebServer::send_work::{{closure}}::{{closure}} (1,345 samples, 1.45%)</title><rect x="98.2512%" y="469" width="1.4502%" height="15" fill="rgb(210,61,42)" fg:x="91127" fg:w="1345"/><text x="98.5012%" y="479.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (1,328 samples, 1.43%)</title><rect x="98.2695%" y="453" width="1.4318%" height="15" fill="rgb(211,52,33)" fg:x="91144" fg:w="1328"/><text x="98.5195%" y="463.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (1,269 samples, 1.37%)</title><rect x="98.3331%" y="437" width="1.3682%" height="15" fill="rgb(234,58,33)" fg:x="91203" fg:w="1269"/><text x="98.5831%" y="447.50"></text></g><g><title>__GI___mmap64 (11 samples, 0.01%)</title><rect x="99.7013%" y="421" width="0.0119%" height="15" fill="rgb(220,115,36)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="431.50"></text></g><g><title>__GI___mmap64 (11 samples, 0.01%)</title><rect x="99.7013%" y="405" width="0.0119%" height="15" fill="rgb(243,153,54)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="99.7013%" y="389" width="0.0119%" height="15" fill="rgb(251,47,18)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="399.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="99.7013%" y="373" width="0.0119%" height="15" fill="rgb(242,102,42)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="383.50"></text></g><g><title>__x64_sys_mmap (11 samples, 0.01%)</title><rect x="99.7013%" y="357" width="0.0119%" height="15" fill="rgb(234,31,38)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="367.50"></text></g><g><title>ksys_mmap_pgoff (11 samples, 0.01%)</title><rect x="99.7013%" y="341" width="0.0119%" height="15" fill="rgb(221,117,51)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="351.50"></text></g><g><title>vm_mmap_pgoff (11 samples, 0.01%)</title><rect x="99.7013%" y="325" width="0.0119%" height="15" fill="rgb(212,20,18)" fg:x="92472" fg:w="11"/><text x="99.9513%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90,913 samples, 98.02%)</title><rect x="1.7024%" y="629" width="98.0205%" height="15" fill="rgb(245,133,36)" fg:x="1579" fg:w="90913"/><text x="1.9524%" y="639.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90,913 samples, 98.02%)</title><rect x="1.7024%" y="613" width="98.0205%" height="15" fill="rgb(212,6,19)" fg:x="1579" fg:w="90913"/><text x="1.9524%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (90,913 samples, 98.02%)</title><rect x="1.7024%" y="597" width="98.0205%" height="15" fill="rgb(218,1,36)" fg:x="1579" fg:w="90913"/><text x="1.9524%" y="607.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (90,913 samples, 98.02%)</title><rect x="1.7024%" y="581" width="98.0205%" height="15" fill="rgb(246,84,54)" fg:x="1579" fg:w="90913"/><text x="1.9524%" y="591.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (20 samples, 0.02%)</title><rect x="99.7013%" y="565" width="0.0216%" height="15" fill="rgb(242,110,6)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="575.50"></text></g><g><title>__pthread_getattr_np (20 samples, 0.02%)</title><rect x="99.7013%" y="549" width="0.0216%" height="15" fill="rgb(214,47,5)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="559.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.02%)</title><rect x="99.7013%" y="533" width="0.0216%" height="15" fill="rgb(218,159,25)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="543.50"></text></g><g><title>tcache_init (20 samples, 0.02%)</title><rect x="99.7013%" y="517" width="0.0216%" height="15" fill="rgb(215,211,28)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="527.50"></text></g><g><title>tcache_init (20 samples, 0.02%)</title><rect x="99.7013%" y="501" width="0.0216%" height="15" fill="rgb(238,59,32)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="511.50"></text></g><g><title>arena_get2 (20 samples, 0.02%)</title><rect x="99.7013%" y="485" width="0.0216%" height="15" fill="rgb(226,82,3)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="495.50"></text></g><g><title>arena_get2 (20 samples, 0.02%)</title><rect x="99.7013%" y="469" width="0.0216%" height="15" fill="rgb(240,164,32)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="479.50"></text></g><g><title>_int_new_arena (20 samples, 0.02%)</title><rect x="99.7013%" y="453" width="0.0216%" height="15" fill="rgb(232,46,7)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="463.50"></text></g><g><title>new_heap (20 samples, 0.02%)</title><rect x="99.7013%" y="437" width="0.0216%" height="15" fill="rgb(229,129,53)" fg:x="92472" fg:w="20"/><text x="99.9513%" y="447.50"></text></g><g><title>__GI___clone (91,035 samples, 98.15%)</title><rect x="1.5838%" y="677" width="98.1520%" height="15" fill="rgb(234,188,29)" fg:x="1469" fg:w="91035"/><text x="1.8338%" y="687.50">__GI___clone</text></g><g><title>start_thread (90,925 samples, 98.03%)</title><rect x="1.7024%" y="661" width="98.0334%" height="15" fill="rgb(246,141,4)" fg:x="1579" fg:w="90925"/><text x="1.9524%" y="671.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (90,925 samples, 98.03%)</title><rect x="1.7024%" y="645" width="98.0334%" height="15" fill="rgb(229,23,39)" fg:x="1579" fg:w="90925"/><text x="1.9524%" y="655.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (12 samples, 0.01%)</title><rect x="99.7229%" y="629" width="0.0129%" height="15" fill="rgb(206,12,3)" fg:x="92492" fg:w="12"/><text x="99.9729%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (12 samples, 0.01%)</title><rect x="99.7229%" y="613" width="0.0129%" height="15" fill="rgb(252,226,20)" fg:x="92492" fg:w="12"/><text x="99.9729%" y="623.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (12 samples, 0.01%)</title><rect x="99.7229%" y="597" width="0.0129%" height="15" fill="rgb(216,123,35)" fg:x="92492" fg:w="12"/><text x="99.9729%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (12 samples, 0.01%)</title><rect x="99.7229%" y="581" width="0.0129%" height="15" fill="rgb(212,68,40)" fg:x="92492" fg:w="12"/><text x="99.9729%" y="591.50"></text></g><g><title>allocate_stack (10 samples, 0.01%)</title><rect x="99.7402%" y="117" width="0.0108%" height="15" fill="rgb(254,125,32)" fg:x="92508" fg:w="10"/><text x="99.9902%" y="127.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.02%)</title><rect x="99.7402%" y="549" width="0.0162%" height="15" fill="rgb(253,97,22)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="559.50"></text></g><g><title>std::panicking::try (15 samples, 0.02%)</title><rect x="99.7402%" y="533" width="0.0162%" height="15" fill="rgb(241,101,14)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="543.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.02%)</title><rect x="99.7402%" y="517" width="0.0162%" height="15" fill="rgb(238,103,29)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (15 samples, 0.02%)</title><rect x="99.7402%" y="501" width="0.0162%" height="15" fill="rgb(233,195,47)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="511.50"></text></g><g><title>std::rt::lang_start::{{closure}} (15 samples, 0.02%)</title><rect x="99.7402%" y="485" width="0.0162%" height="15" fill="rgb(246,218,30)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.02%)</title><rect x="99.7402%" y="469" width="0.0162%" height="15" fill="rgb(219,145,47)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.02%)</title><rect x="99.7402%" y="453" width="0.0162%" height="15" fill="rgb(243,12,26)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="463.50"></text></g><g><title>rust_pg::main (15 samples, 0.02%)</title><rect x="99.7402%" y="437" width="0.0162%" height="15" fill="rgb(214,87,16)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="447.50"></text></g><g><title>with_lock (15 samples, 0.02%)</title><rect x="99.7402%" y="421" width="0.0162%" height="15" fill="rgb(208,99,42)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="431.50"></text></g><g><title>rust_pg::WebServer::send_work (15 samples, 0.02%)</title><rect x="99.7402%" y="405" width="0.0162%" height="15" fill="rgb(253,99,2)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="99.7402%" y="389" width="0.0162%" height="15" fill="rgb(220,168,23)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="99.7402%" y="373" width="0.0162%" height="15" fill="rgb(242,38,24)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="99.7402%" y="357" width="0.0162%" height="15" fill="rgb(225,182,9)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="99.7402%" y="341" width="0.0162%" height="15" fill="rgb(243,178,37)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="99.7402%" y="325" width="0.0162%" height="15" fill="rgb(232,139,19)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.02%)</title><rect x="99.7402%" y="309" width="0.0162%" height="15" fill="rgb(225,201,24)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.02%)</title><rect x="99.7402%" y="293" width="0.0162%" height="15" fill="rgb(221,47,46)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.02%)</title><rect x="99.7402%" y="277" width="0.0162%" height="15" fill="rgb(249,23,13)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.02%)</title><rect x="99.7402%" y="261" width="0.0162%" height="15" fill="rgb(219,9,5)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 0.02%)</title><rect x="99.7402%" y="245" width="0.0162%" height="15" fill="rgb(254,171,16)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 0.02%)</title><rect x="99.7402%" y="229" width="0.0162%" height="15" fill="rgb(230,171,20)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="239.50"></text></g><g><title>rust_pg::WebServer::send_work::{{closure}} (15 samples, 0.02%)</title><rect x="99.7402%" y="213" width="0.0162%" height="15" fill="rgb(210,71,41)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="223.50"></text></g><g><title>std::thread::spawn (15 samples, 0.02%)</title><rect x="99.7402%" y="197" width="0.0162%" height="15" fill="rgb(206,173,20)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="207.50"></text></g><g><title>std::thread::Builder::spawn (15 samples, 0.02%)</title><rect x="99.7402%" y="181" width="0.0162%" height="15" fill="rgb(233,88,34)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="191.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (15 samples, 0.02%)</title><rect x="99.7402%" y="165" width="0.0162%" height="15" fill="rgb(223,209,46)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="175.50"></text></g><g><title>std::sys::unix::thread::Thread::new (15 samples, 0.02%)</title><rect x="99.7402%" y="149" width="0.0162%" height="15" fill="rgb(250,43,18)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="159.50"></text></g><g><title>__pthread_create_2_1 (15 samples, 0.02%)</title><rect x="99.7402%" y="133" width="0.0162%" height="15" fill="rgb(208,13,10)" fg:x="92508" fg:w="15"/><text x="99.9902%" y="143.50"></text></g><g><title>_start (16 samples, 0.02%)</title><rect x="99.7402%" y="677" width="0.0173%" height="15" fill="rgb(212,200,36)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="687.50"></text></g><g><title>__libc_start_main (16 samples, 0.02%)</title><rect x="99.7402%" y="661" width="0.0173%" height="15" fill="rgb(225,90,30)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="671.50"></text></g><g><title>main (16 samples, 0.02%)</title><rect x="99.7402%" y="645" width="0.0173%" height="15" fill="rgb(236,182,39)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (16 samples, 0.02%)</title><rect x="99.7402%" y="629" width="0.0173%" height="15" fill="rgb(212,144,35)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="639.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="99.7402%" y="613" width="0.0173%" height="15" fill="rgb(228,63,44)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="623.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="99.7402%" y="597" width="0.0173%" height="15" fill="rgb(228,109,6)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="607.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="99.7402%" y="581" width="0.0173%" height="15" fill="rgb(238,117,24)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (16 samples, 0.02%)</title><rect x="99.7402%" y="565" width="0.0173%" height="15" fill="rgb(242,26,26)" fg:x="92508" fg:w="16"/><text x="99.9902%" y="575.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.02%)</title><rect x="99.7574%" y="677" width="0.0162%" height="15" fill="rgb(221,92,48)" fg:x="92524" fg:w="15"/><text x="100.0074%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (59 samples, 0.06%)</title><rect x="99.7801%" y="677" width="0.0636%" height="15" fill="rgb(209,209,32)" fg:x="92545" fg:w="59"/><text x="100.0301%" y="687.50"></text></g><g><title>do_syscall_64 (16 samples, 0.02%)</title><rect x="99.8264%" y="661" width="0.0173%" height="15" fill="rgb(221,70,22)" fg:x="92588" fg:w="16"/><text x="100.0764%" y="671.50"></text></g><g><title>__x64_sys_exit_group (15 samples, 0.02%)</title><rect x="99.8275%" y="645" width="0.0162%" height="15" fill="rgb(248,145,5)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="655.50"></text></g><g><title>do_group_exit (15 samples, 0.02%)</title><rect x="99.8275%" y="629" width="0.0162%" height="15" fill="rgb(226,116,26)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="639.50"></text></g><g><title>do_exit (15 samples, 0.02%)</title><rect x="99.8275%" y="613" width="0.0162%" height="15" fill="rgb(244,5,17)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="623.50"></text></g><g><title>exit_mm (15 samples, 0.02%)</title><rect x="99.8275%" y="597" width="0.0162%" height="15" fill="rgb(252,159,33)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="607.50"></text></g><g><title>mmput (15 samples, 0.02%)</title><rect x="99.8275%" y="581" width="0.0162%" height="15" fill="rgb(206,71,0)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="591.50"></text></g><g><title>exit_mmap (15 samples, 0.02%)</title><rect x="99.8275%" y="565" width="0.0162%" height="15" fill="rgb(233,118,54)" fg:x="92589" fg:w="15"/><text x="100.0775%" y="575.50"></text></g><g><title>unmap_vmas (14 samples, 0.02%)</title><rect x="99.8286%" y="549" width="0.0151%" height="15" fill="rgb(234,83,48)" fg:x="92590" fg:w="14"/><text x="100.0786%" y="559.50"></text></g><g><title>unmap_single_vma (14 samples, 0.02%)</title><rect x="99.8286%" y="533" width="0.0151%" height="15" fill="rgb(228,3,54)" fg:x="92590" fg:w="14"/><text x="100.0786%" y="543.50"></text></g><g><title>unmap_page_range (14 samples, 0.02%)</title><rect x="99.8286%" y="517" width="0.0151%" height="15" fill="rgb(226,155,13)" fg:x="92590" fg:w="14"/><text x="100.0786%" y="527.50"></text></g><g><title>zap_pmd_range.isra.0 (14 samples, 0.02%)</title><rect x="99.8286%" y="501" width="0.0151%" height="15" fill="rgb(241,28,37)" fg:x="92590" fg:w="14"/><text x="100.0786%" y="511.50"></text></g><g><title>zap_pte_range (14 samples, 0.02%)</title><rect x="99.8286%" y="485" width="0.0151%" height="15" fill="rgb(233,93,10)" fg:x="92590" fg:w="14"/><text x="100.0786%" y="495.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (103 samples, 0.11%)</title><rect x="99.8437%" y="677" width="0.1111%" height="15" fill="rgb(225,113,19)" fg:x="92604" fg:w="103"/><text x="100.0937%" y="687.50"></text></g><g><title>all (92,749 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(241,2,18)" fg:x="0" fg:w="92749"/><text x="0.2500%" y="719.50"></text></g><g><title>rust_pg (92,744 samples, 99.99%)</title><rect x="0.0054%" y="693" width="99.9946%" height="15" fill="rgb(228,207,21)" fg:x="5" fg:w="92744"/><text x="0.2554%" y="703.50">rust_pg</text></g><g><title>syscall_return_via_sysret (42 samples, 0.05%)</title><rect x="99.9547%" y="677" width="0.0453%" height="15" fill="rgb(213,211,35)" fg:x="92707" fg:w="42"/><text x="100.2047%" y="687.50"></text></g></svg></svg>